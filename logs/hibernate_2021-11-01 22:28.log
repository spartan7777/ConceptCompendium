[DEBUG] 2021-11-01 22:28:30.051 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-11-01 22:28:30.069 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-11-01 22:28:30.082 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-11-01 22:28:30.351 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-11-01 22:28:30.364 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-11-01 22:28:31.002 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-11-01 22:28:31.010 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-11-01 22:28:31.024 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-11-01 22:28:32.094 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-11-01 22:28:32.168 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-11-01 22:28:32.175 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-11-01 22:28:32.238 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-11-01 22:28:32.353 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@773bd77b
[DEBUG] 2021-11-01 22:28:32.353 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@773bd77b
[DEBUG] 2021-11-01 22:28:32.353 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@773bd77b
[DEBUG] 2021-11-01 22:28:32.354 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@47c64cfe
[DEBUG] 2021-11-01 22:28:32.358 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6f8f8a80
[DEBUG] 2021-11-01 22:28:32.361 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@27f1bbe0
[DEBUG] 2021-11-01 22:28:32.362 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@baf1bb3
[DEBUG] 2021-11-01 22:28:32.362 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@baf1bb3
[DEBUG] 2021-11-01 22:28:32.362 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@baf1bb3
[DEBUG] 2021-11-01 22:28:32.368 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@ddf20fd
[DEBUG] 2021-11-01 22:28:32.369 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@ddf20fd
[DEBUG] 2021-11-01 22:28:32.369 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@ddf20fd
[DEBUG] 2021-11-01 22:28:32.370 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@40021799
[DEBUG] 2021-11-01 22:28:32.370 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@40021799
[DEBUG] 2021-11-01 22:28:32.370 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@40021799
[DEBUG] 2021-11-01 22:28:32.371 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@264c5d07
[DEBUG] 2021-11-01 22:28:32.371 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@264c5d07
[DEBUG] 2021-11-01 22:28:32.371 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@264c5d07
[DEBUG] 2021-11-01 22:28:32.376 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5e742e4
[DEBUG] 2021-11-01 22:28:32.377 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5e742e4
[DEBUG] 2021-11-01 22:28:32.377 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5e742e4
[DEBUG] 2021-11-01 22:28:32.378 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1dab9dd6
[DEBUG] 2021-11-01 22:28:32.378 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@1dab9dd6
[DEBUG] 2021-11-01 22:28:32.378 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@1dab9dd6
[DEBUG] 2021-11-01 22:28:32.379 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2f879bab
[DEBUG] 2021-11-01 22:28:32.379 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2f879bab
[DEBUG] 2021-11-01 22:28:32.380 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2f879bab
[DEBUG] 2021-11-01 22:28:32.381 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1d207fad
[DEBUG] 2021-11-01 22:28:32.382 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1d207fad
[DEBUG] 2021-11-01 22:28:32.383 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@488b50ec
[DEBUG] 2021-11-01 22:28:32.384 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@488b50ec
[DEBUG] 2021-11-01 22:28:32.384 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@6d2d99fc
[DEBUG] 2021-11-01 22:28:32.384 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@6d2d99fc
[DEBUG] 2021-11-01 22:28:32.385 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@201aa8c1
[DEBUG] 2021-11-01 22:28:32.391 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4f20a5e0
[DEBUG] 2021-11-01 22:28:32.396 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@2fe88a09
[DEBUG] 2021-11-01 22:28:32.399 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2fe88a09
[DEBUG] 2021-11-01 22:28:32.400 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@30cecdca
[DEBUG] 2021-11-01 22:28:32.400 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@30cecdca
[DEBUG] 2021-11-01 22:28:32.413 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@3241713e
[DEBUG] 2021-11-01 22:28:32.414 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3241713e
[DEBUG] 2021-11-01 22:28:32.416 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@60723d6a
[DEBUG] 2021-11-01 22:28:32.416 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@60723d6a
[DEBUG] 2021-11-01 22:28:32.416 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@9a7a808
[DEBUG] 2021-11-01 22:28:32.419 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@9a7a808
[DEBUG] 2021-11-01 22:28:32.420 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@30135202
[DEBUG] 2021-11-01 22:28:32.420 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@30135202
[DEBUG] 2021-11-01 22:28:32.426 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@245a060f
[DEBUG] 2021-11-01 22:28:32.426 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@245a060f
[DEBUG] 2021-11-01 22:28:32.429 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@21ab988f
[DEBUG] 2021-11-01 22:28:32.431 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@21ab988f
[DEBUG] 2021-11-01 22:28:32.432 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@13a37e2a
[DEBUG] 2021-11-01 22:28:32.435 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@13a37e2a
[DEBUG] 2021-11-01 22:28:32.436 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@5ca1f591
[DEBUG] 2021-11-01 22:28:32.436 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5ca1f591
[DEBUG] 2021-11-01 22:28:32.437 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@7a18e8d
[DEBUG] 2021-11-01 22:28:32.437 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@7a18e8d
[DEBUG] 2021-11-01 22:28:32.438 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@5d1e09bc
[DEBUG] 2021-11-01 22:28:32.438 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@5d1e09bc
[DEBUG] 2021-11-01 22:28:32.438 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@5d1e09bc
[DEBUG] 2021-11-01 22:28:32.444 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@726a17c4
[DEBUG] 2021-11-01 22:28:32.445 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6ff37443
[DEBUG] 2021-11-01 22:28:32.446 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6ff37443
[DEBUG] 2021-11-01 22:28:32.446 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6ff37443
[DEBUG] 2021-11-01 22:28:32.451 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@77ee25f1
[DEBUG] 2021-11-01 22:28:32.452 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@6b3871d6
[DEBUG] 2021-11-01 22:28:32.452 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@6b3871d6
[DEBUG] 2021-11-01 22:28:32.453 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@7578e06a
[DEBUG] 2021-11-01 22:28:32.453 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7578e06a
[DEBUG] 2021-11-01 22:28:32.454 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6050462a
[DEBUG] 2021-11-01 22:28:32.459 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6050462a
[DEBUG] 2021-11-01 22:28:32.461 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@34523d46
[DEBUG] 2021-11-01 22:28:32.461 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@34523d46
[DEBUG] 2021-11-01 22:28:32.462 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3af356f
[DEBUG] 2021-11-01 22:28:32.462 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3af356f
[DEBUG] 2021-11-01 22:28:32.463 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2b0b4d53
[DEBUG] 2021-11-01 22:28:32.464 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@6fca2a8f
[DEBUG] 2021-11-01 22:28:32.464 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@6fca2a8f
[DEBUG] 2021-11-01 22:28:32.465 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@6fca2a8f
[DEBUG] 2021-11-01 22:28:32.466 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@a7f0ab6
[DEBUG] 2021-11-01 22:28:32.466 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@a7f0ab6
[DEBUG] 2021-11-01 22:28:32.470 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@a7f0ab6
[DEBUG] 2021-11-01 22:28:32.471 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@52fc5eb1
[DEBUG] 2021-11-01 22:28:32.472 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2a49fe
[DEBUG] 2021-11-01 22:28:32.472 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@7bef452c
[DEBUG] 2021-11-01 22:28:32.473 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@7bef452c
[DEBUG] 2021-11-01 22:28:32.473 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@7bef452c
[DEBUG] 2021-11-01 22:28:32.473 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@417d6615
[DEBUG] 2021-11-01 22:28:32.473 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@417d6615
[DEBUG] 2021-11-01 22:28:32.474 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@417d6615
[DEBUG] 2021-11-01 22:28:32.474 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6272c96f
[DEBUG] 2021-11-01 22:28:32.474 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@48c4245d
[DEBUG] 2021-11-01 22:28:32.477 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@b9dfc5a
[DEBUG] 2021-11-01 22:28:32.477 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@b9dfc5a
[DEBUG] 2021-11-01 22:28:32.478 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@426e505c
[DEBUG] 2021-11-01 22:28:32.484 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@7dd00705
[DEBUG] 2021-11-01 22:28:32.485 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7dd00705
[DEBUG] 2021-11-01 22:28:32.486 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@392a04e7
[DEBUG] 2021-11-01 22:28:32.487 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@392a04e7
[DEBUG] 2021-11-01 22:28:32.487 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6d3c232f
[DEBUG] 2021-11-01 22:28:32.529 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@53692008
[DEBUG] 2021-11-01 22:28:32.530 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@131fcb6f
[DEBUG] 2021-11-01 22:28:32.535 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@57540fd0
[DEBUG] 2021-11-01 22:28:32.535 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@57540fd0
[DEBUG] 2021-11-01 22:28:32.539 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1542af63
[DEBUG] 2021-11-01 22:28:32.544 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@ecfbe91
[DEBUG] 2021-11-01 22:28:32.546 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@20ed3303
[DEBUG] 2021-11-01 22:28:32.546 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3adbe50f
[DEBUG] 2021-11-01 22:28:32.546 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3a627c80
[DEBUG] 2021-11-01 22:28:32.546 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@49aa766b
[DEBUG] 2021-11-01 22:28:32.546 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@963176
[DEBUG] 2021-11-01 22:28:32.546 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@65004ff6
[DEBUG] 2021-11-01 22:28:32.602 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-11-01 22:28:32.603 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-11-01 22:28:32.604 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-11-01 22:28:32.606 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-11-01 22:28:32.609 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-11-01 22:28:32.612 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-11-01 22:28:32.612 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-11-01 22:28:32.613 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-11-01 22:28:32.613 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-11-01 22:28:32.614 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-11-01 22:28:32.614 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-11-01 22:28:32.614 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-11-01 22:28:32.614 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-11-01 22:28:32.616 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-11-01 22:28:32.621 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium
[INFO ] 2021-11-01 22:28:32.621 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-11-01 22:28:32.621 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-11-01 22:28:32.916 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-11-01 22:28:34.016 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-11-01 22:28:34.016 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-11-01 22:28:34.016 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-11-01 22:28:34.073 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect
[DEBUG] 2021-11-01 22:28:34.145 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-11-01 22:28:34.211 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-11-01 22:28:34.299 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-11-01 22:28:34.308 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4248b963] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7f08caf]
[DEBUG] 2021-11-01 22:28:34.409 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.User
[DEBUG] 2021-11-01 22:28:34.454 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-11-01 22:28:34.464 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-11-01 22:28:34.471 [main] EntityBinder - Bind entity ogedengbe.tosan.model.User on table user
[DEBUG] 2021-11-01 22:28:34.518 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.525 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-11-01 22:28:34.526 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.User:userId]
[DEBUG] 2021-11-01 22:28:34.533 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-11-01 22:28:34.534 [main] PropertyBinder - Building property userId
[DEBUG] 2021-11-01 22:28:34.544 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-11-01 22:28:34.551 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-11-01 22:28:34.554 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=concepts, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.559 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.580 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.580 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=concepts_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.581 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='concepts_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-11-01 22:28:34.582 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-11-01 22:28:34.582 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-11-01 22:28:34.583 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.User.concepts
[DEBUG] 2021-11-01 22:28:34.584 [main] PropertyBinder - Building property concepts
[DEBUG] 2021-11-01 22:28:34.585 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.591 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-11-01 22:28:34.591 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.User:firstName]
[DEBUG] 2021-11-01 22:28:34.593 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-11-01 22:28:34.594 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-11-01 22:28:34.597 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.598 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-11-01 22:28:34.598 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.User:lastName]
[DEBUG] 2021-11-01 22:28:34.598 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-11-01 22:28:34.598 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-11-01 22:28:34.598 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.601 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-11-01 22:28:34.602 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.User:password]
[DEBUG] 2021-11-01 22:28:34.602 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-11-01 22:28:34.602 [main] PropertyBinder - Building property password
[DEBUG] 2021-11-01 22:28:34.602 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.602 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-11-01 22:28:34.602 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.User:userName]
[DEBUG] 2021-11-01 22:28:34.602 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-11-01 22:28:34.602 [main] PropertyBinder - Building property userName
[DEBUG] 2021-11-01 22:28:34.604 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.Concept
[DEBUG] 2021-11-01 22:28:34.607 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-11-01 22:28:34.608 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-11-01 22:28:34.608 [main] EntityBinder - Bind entity ogedengbe.tosan.model.Concept on table concept
[DEBUG] 2021-11-01 22:28:34.668 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.668 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-11-01 22:28:34.669 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.Concept:conceptId]
[DEBUG] 2021-11-01 22:28:34.669 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-11-01 22:28:34.669 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-11-01 22:28:34.669 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-11-01 22:28:34.669 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.669 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-11-01 22:28:34.669 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.Concept:category]
[DEBUG] 2021-11-01 22:28:34.669 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-11-01 22:28:34.669 [main] PropertyBinder - Building property category
[DEBUG] 2021-11-01 22:28:34.670 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.670 [main] PropertyBinder - MetadataSourceProcessor property categoryId with lazy=false
[DEBUG] 2021-11-01 22:28:34.670 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.Concept:categoryId]
[DEBUG] 2021-11-01 22:28:34.670 [main] SimpleValueBinder - building SimpleValue for categoryId
[DEBUG] 2021-11-01 22:28:34.670 [main] PropertyBinder - Building property categoryId
[DEBUG] 2021-11-01 22:28:34.670 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.670 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-11-01 22:28:34.670 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.Concept:conceptName]
[DEBUG] 2021-11-01 22:28:34.670 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-11-01 22:28:34.670 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-11-01 22:28:34.670 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.670 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-11-01 22:28:34.671 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.Concept:description]
[DEBUG] 2021-11-01 22:28:34.671 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-11-01 22:28:34.671 [main] PropertyBinder - Building property description
[DEBUG] 2021-11-01 22:28:34.671 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='user_id', mappedBy=''}
[DEBUG] 2021-11-01 22:28:34.671 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=user, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.674 [main] PropertyBinder - Building property user
[DEBUG] 2021-11-01 22:28:34.679 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.Category
[DEBUG] 2021-11-01 22:28:34.679 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-11-01 22:28:34.680 [main] EntityBinder - Import with entity name Category
[DEBUG] 2021-11-01 22:28:34.680 [main] EntityBinder - Bind entity ogedengbe.tosan.model.Category on table category
[DEBUG] 2021-11-01 22:28:34.681 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(category), mappingColumn=category_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.682 [main] PropertyBinder - MetadataSourceProcessor property categoryId with lazy=false
[DEBUG] 2021-11-01 22:28:34.682 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.Category:categoryId]
[DEBUG] 2021-11-01 22:28:34.682 [main] SimpleValueBinder - building SimpleValue for categoryId
[DEBUG] 2021-11-01 22:28:34.682 [main] PropertyBinder - Building property categoryId
[DEBUG] 2021-11-01 22:28:34.682 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(category_id)]), categoryId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-11-01 22:28:34.682 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(category), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.682 [main] PropertyBinder - MetadataSourceProcessor property categoryName with lazy=false
[DEBUG] 2021-11-01 22:28:34.682 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.Category:categoryName]
[DEBUG] 2021-11-01 22:28:34.682 [main] SimpleValueBinder - building SimpleValue for categoryName
[DEBUG] 2021-11-01 22:28:34.682 [main] PropertyBinder - Building property categoryName
[DEBUG] 2021-11-01 22:28:34.685 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='category_id', referencedColumn='category_id', mappedBy=''}
[DEBUG] 2021-11-01 22:28:34.685 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(category), mappingColumn=concept, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.686 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(category), mappingColumn=definition, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-11-01 22:28:34.686 [main] PropertyBinder - MetadataSourceProcessor property definition with lazy=false
[DEBUG] 2021-11-01 22:28:34.686 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.Category:definition]
[DEBUG] 2021-11-01 22:28:34.687 [main] SimpleValueBinder - building SimpleValue for definition
[DEBUG] 2021-11-01 22:28:34.687 [main] PropertyBinder - Building property definition
[DEBUG] 2021-11-01 22:28:34.688 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-11-01 22:28:34.689 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-11-01 22:28:34.689 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-11-01 22:28:34.689 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-11-01 22:28:34.689 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-11-01 22:28:34.689 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-11-01 22:28:34.689 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-11-01 22:28:34.690 [main] SimpleValueBinder - Starting fillSimpleValue for categoryId
[DEBUG] 2021-11-01 22:28:34.690 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-11-01 22:28:34.691 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-11-01 22:28:34.691 [main] SimpleValueBinder - Starting fillSimpleValue for categoryId
[DEBUG] 2021-11-01 22:28:34.691 [main] SimpleValueBinder - Starting fillSimpleValue for categoryName
[DEBUG] 2021-11-01 22:28:34.691 [main] SimpleValueBinder - Starting fillSimpleValue for definition
[DEBUG] 2021-11-01 22:28:34.698 [main] PrimaryKey - Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[DEBUG] 2021-11-01 22:28:34.699 [main] PrimaryKey - Forcing column [concept_id] to be non-null as it is part of the primary key for table [concept]
[DEBUG] 2021-11-01 22:28:34.700 [main] PrimaryKey - Forcing column [category_id] to be non-null as it is part of the primary key for table [category]
[DEBUG] 2021-11-01 22:28:34.701 [main] PropertyBinder - Building property concept
[DEBUG] 2021-11-01 22:28:34.701 [main] CollectionSecondPass - Second pass for collection: ogedengbe.tosan.model.User.concepts
[DEBUG] 2021-11-01 22:28:34.701 [main] CollectionBinder - Binding a OneToMany: ogedengbe.tosan.model.User.concepts through a foreign key
[DEBUG] 2021-11-01 22:28:34.702 [main] CollectionBinder - Mapping collection: ogedengbe.tosan.model.User.concepts -> concept
[DEBUG] 2021-11-01 22:28:34.707 [main] TableBinder - Retrieving property ogedengbe.tosan.model.Concept.user
[DEBUG] 2021-11-01 22:28:34.707 [main] CollectionSecondPass - Mapped collection key: user_id, one-to-many: ogedengbe.tosan.model.Concept
[DEBUG] 2021-11-01 22:28:34.708 [main] InFlightMetadataCollectorImpl - Resolving reference to class: ogedengbe.tosan.model.User
[DEBUG] 2021-11-01 22:28:34.713 [main] InFlightMetadataCollectorImpl - Resolving reference to class: ogedengbe.tosan.model.User
[DEBUG] 2021-11-01 22:28:34.766 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2021-11-01 22:28:34.767 [main] Settings - SessionFactory name : null
[DEBUG] 2021-11-01 22:28:34.767 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2021-11-01 22:28:34.767 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2021-11-01 22:28:34.767 [main] Settings - Statistics: disabled
[DEBUG] 2021-11-01 22:28:34.767 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2021-11-01 22:28:34.767 [main] Settings - Default entity-mode: pojo
[DEBUG] 2021-11-01 22:28:34.768 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2021-11-01 22:28:34.768 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2021-11-01 22:28:34.768 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2021-11-01 22:28:34.769 [main] Settings - Default batch fetch size: -1
[DEBUG] 2021-11-01 22:28:34.769 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2021-11-01 22:28:34.769 [main] Settings - Default null ordering: NONE
[DEBUG] 2021-11-01 22:28:34.769 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2021-11-01 22:28:34.769 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2021-11-01 22:28:34.769 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2021-11-01 22:28:34.769 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2021-11-01 22:28:34.769 [main] Settings - Query language substitutions: {}
[DEBUG] 2021-11-01 22:28:34.774 [main] Settings - Named query checking : enabled
[DEBUG] 2021-11-01 22:28:34.774 [main] Settings - Second-level cache: disabled
[DEBUG] 2021-11-01 22:28:34.774 [main] Settings - Second-level query cache: disabled
[DEBUG] 2021-11-01 22:28:34.774 [main] Settings - Second-level query cache factory: null
[DEBUG] 2021-11-01 22:28:34.774 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2021-11-01 22:28:34.774 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2021-11-01 22:28:34.774 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2021-11-01 22:28:34.774 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2021-11-01 22:28:34.774 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - JDBC batch size: 15
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - Wrap result sets: disabled
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - JPA compliance - query : 
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - JPA compliance - closed-handling : 
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - JPA compliance - lists : 
[DEBUG] 2021-11-01 22:28:34.775 [main] Settings - JPA compliance - transactions : 
[INFO ] 2021-11-01 22:28:34.873 [main] beans - HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
[DEBUG] 2021-11-01 22:28:34.913 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2021-11-01 22:28:34.913 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, dialect=org.hibernate.dialect.MySQLDialect, java.specification.version=11, sun.cpu.isalist=, hibernate.c3p0.idle_test_period=3000, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.MySQLDialect, hibernate.c3p0.min_size=5, java.class.path=/home/student/intellij/lib/idea_rt.jar:/home/student/intellij/plugins/junit/lib/junit5-rt.jar:/home/student/intellij/plugins/junit/lib/junit-rt.jar:/home/student/IdeaProjects/ConceptCompendium/target/test-classes:/home/student/IdeaProjects/ConceptCompendium/target/classes:/home/student/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/student/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/student/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/student/.m2/repository/mysql/mysql-connector-java/8.0.16/mysql-connector-java-8.0.16.jar:/home/student/.m2/repository/com/google/protobuf/protobuf-java/3.6.1/protobuf-java-3.6.1.jar:/home/student/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/student/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/student/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/student/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter/5.8.1/junit-jupiter-5.8.1.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.8.1/junit-jupiter-params-5.8.1.jar:/home/student/.m2/repository/org/hibernate/hibernate-core/5.4.4.Final/hibernate-core-5.4.4.Final.jar:/home/student/.m2/repository/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/home/student/.m2/repository/javax/persistence/javax.persistence-api/2.2/javax.persistence-api-2.2.jar:/home/student/.m2/repository/org/javassist/javassist/3.24.0-GA/javassist-3.24.0-GA.jar:/home/student/.m2/repository/net/bytebuddy/byte-buddy/1.9.11/byte-buddy-1.9.11.jar:/home/student/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/student/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.1.1.Final/jboss-transaction-api_1.2_spec-1.1.1.Final.jar:/home/student/.m2/repository/org/jboss/jandex/2.0.5.Final/jandex-2.0.5.Final.jar:/home/student/.m2/repository/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/home/student/.m2/repository/javax/activation/javax.activation-api/1.2.0/javax.activation-api-1.2.0.jar:/home/student/.m2/repository/org/dom4j/dom4j/2.1.1/dom4j-2.1.1.jar:/home/student/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.0.Final/hibernate-commons-annotations-5.1.0.Final.jar:/home/student/.m2/repository/javax/xml/bind/jaxb-api/2.3.1/jaxb-api-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.1/jaxb-runtime-2.3.1.jar:/home/student/.m2/repository/org/glassfish/jaxb/txw2/2.3.1/txw2-2.3.1.jar:/home/student/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.7/istack-commons-runtime-3.0.7.jar:/home/student/.m2/repository/org/jvnet/staxex/stax-ex/1.8/stax-ex-1.8.jar:/home/student/.m2/repository/com/sun/xml/fastinfoset/FastInfoset/1.2.15/FastInfoset-1.2.15.jar:/home/student/.m2/repository/org/hibernate/hibernate-c3p0/5.4.4.Final/hibernate-c3p0-5.4.4.Final.jar:/home/student/.m2/repository/com/mchange/c3p0/0.9.5.3/c3p0-0.9.5.3.jar:/home/student/.m2/repository/com/mchange/mchange-commons-java/0.2.15/mchange-commons-java-0.2.15.jar:/home/student/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.0.0/junit-jupiter-api-5.0.0.jar:/home/student/.m2/repository/org/opentest4j/opentest4j/1.0.0/opentest4j-1.0.0.jar:/home/student/.m2/repository/org/junit/platform/junit-platform-commons/1.0.0/junit-platform-commons-1.0.0.jar, java.vm.vendor=Ubuntu, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=https://ubuntu.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=11, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=/usr/lib/jvm/java-11-openjdk-amd64/lib, sun.java.command=com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit5 ogedengbe.tosan.persistence.CategoryDaoTest,getByPropertyLikeSuccess, jdk.debug=release, sun.cpu.endian=little, user.home=/home/student, hibernate.c3p0.max_statements=50, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2021-04-20, java.home=/usr/lib/jvm/java-11-openjdk-amd64, file.separator=/, java.vm.compressedOopsMode=32-bit, line.separator=
, hibernate.c3p0.timeout=300, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, connection.password=student, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, user.name=student, path.separator=:, hibernate.connection.username=****, os.version=5.4.0-89-generic, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/test_compendium, file.encoding=UTF-8, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugs.launchpad.net/ubuntu/+source/openjdk-lts, java.io.tmpdir=/tmp, java.version=11.0.11, user.dir=/home/student/IdeaProjects/ConceptCompendium, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.print.PSPrinterJob, hibernate.connection.password=****, sun.os.patch.level=unknown, connection.driver_class=com.mysql.cj.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6c6017b9, java.library.path=/usr/java/packages/lib:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib, java.vendor=Ubuntu, java.vm.info=mixed mode, sharing, java.vm.version=11.0.11+9-Ubuntu-0ubuntu2.20.04, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/test_compendium, java.class.version=55.0}
[DEBUG] 2021-11-01 22:28:34.954 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2021-11-01 22:28:34.955 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2021-11-01 22:28:34.955 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2021-11-01 22:28:34.956 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4248b963] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3337d04c]
[DEBUG] 2021-11-01 22:28:35.132 [main] ClassLoaderAccessImpl - Not known whether passed class name [ogedengbe.tosan.model.Concept] is safe
[DEBUG] 2021-11-01 22:28:35.139 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ogedengbe.tosan.model.Concept
[DEBUG] 2021-11-01 22:28:35.177 [main] ClassLoaderAccessImpl - Not known whether passed class name [ogedengbe.tosan.model.Concept] is safe
[DEBUG] 2021-11-01 22:28:35.178 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ogedengbe.tosan.model.Concept
[DEBUG] 2021-11-01 22:28:35.536 [main] ClassLoaderAccessImpl - Not known whether passed class name [ogedengbe.tosan.model.Category] is safe
[DEBUG] 2021-11-01 22:28:35.538 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ogedengbe.tosan.model.Category
[DEBUG] 2021-11-01 22:28:35.539 [main] ClassLoaderAccessImpl - Not known whether passed class name [ogedengbe.tosan.model.Category] is safe
[DEBUG] 2021-11-01 22:28:35.539 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ogedengbe.tosan.model.Category
[DEBUG] 2021-11-01 22:28:35.599 [main] ClassLoaderAccessImpl - Not known whether passed class name [ogedengbe.tosan.model.User] is safe
[DEBUG] 2021-11-01 22:28:35.602 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ogedengbe.tosan.model.User
[DEBUG] 2021-11-01 22:28:35.605 [main] ClassLoaderAccessImpl - Not known whether passed class name [ogedengbe.tosan.model.User] is safe
[DEBUG] 2021-11-01 22:28:35.606 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : ogedengbe.tosan.model.User
[DEBUG] 2021-11-01 22:28:35.696 [main] AbstractCollectionPersister - Static SQL for collection: ogedengbe.tosan.model.User.concepts
[DEBUG] 2021-11-01 22:28:35.696 [main] AbstractCollectionPersister -  Row insert: update concept set user_id=? where concept_id=?
[DEBUG] 2021-11-01 22:28:35.696 [main] AbstractCollectionPersister -  Row update: update concept set  where concept_id=?
[DEBUG] 2021-11-01 22:28:35.696 [main] AbstractCollectionPersister -  Row delete: update concept set user_id=null where user_id=? and concept_id=?
[DEBUG] 2021-11-01 22:28:35.696 [main] AbstractCollectionPersister -  One-shot delete: update concept set user_id=null where user_id=?
[DEBUG] 2021-11-01 22:28:35.699 [main] AbstractEntityPersister - Static SQL for entity: ogedengbe.tosan.model.Concept
[DEBUG] 2021-11-01 22:28:35.699 [main] AbstractEntityPersister -  Version select: select concept_id from concept where concept_id =?
[DEBUG] 2021-11-01 22:28:35.700 [main] AbstractEntityPersister -  Snapshot select: select concept_.concept_id, concept_.category as category2_1_, concept_.category_id as category3_1_, concept_.name as name4_1_, concept_.description as descript5_1_, concept_.user_id as user_id6_1_ from concept concept_ where concept_.concept_id=?
[DEBUG] 2021-11-01 22:28:35.701 [main] AbstractEntityPersister -  Insert 0: insert into concept (category, category_id, name, description, user_id, concept_id) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2021-11-01 22:28:35.701 [main] AbstractEntityPersister -  Update 0: update concept set category=?, category_id=?, name=?, description=?, user_id=? where concept_id=?
[DEBUG] 2021-11-01 22:28:35.701 [main] AbstractEntityPersister -  Delete 0: delete from concept where concept_id=?
[DEBUG] 2021-11-01 22:28:35.701 [main] AbstractEntityPersister -  Identity insert: insert into concept (category, category_id, name, description, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2021-11-01 22:28:35.737 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71e7adbb]
[DEBUG] 2021-11-01 22:28:35.738 [main] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2021-11-01 22:28:35.738 [main] MetamodelGraphWalker - Visiting attribute path : categoryId
[DEBUG] 2021-11-01 22:28:35.738 [main] MetamodelGraphWalker - Visiting attribute path : conceptName
[DEBUG] 2021-11-01 22:28:35.738 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2021-11-01 22:28:35.739 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-11-01 22:28:35.742 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27fe059d]
[DEBUG] 2021-11-01 22:28:35.745 [main] MetamodelGraphWalker - Visiting attribute path : user.concepts
[DEBUG] 2021-11-01 22:28:35.745 [main] MetamodelGraphWalker - Property path deemed to be circular : user.concepts
[DEBUG] 2021-11-01 22:28:35.745 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-11-01 22:28:35.747 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-11-01 22:28:35.747 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-11-01 22:28:35.747 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-11-01 22:28:35.748 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-11-01 22:28:35.759 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-11-01 22:28:35.763 [main] LoadPlanTreePrinter - LoadPlan(entity=ogedengbe.tosan.model.Concept)
    - Returns
       - EntityReturnImpl(entity=ogedengbe.tosan.model.Concept, querySpaceUid=<gen:0>, path=ogedengbe.tosan.model.Concept)
          - EntityAttributeFetchImpl(entity=ogedengbe.tosan.model.User, querySpaceUid=<gen:1>, path=ogedengbe.tosan.model.Concept.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ogedengbe.tosan.model.Concept)
          - SQL table alias mapping - concept0_
          - alias suffix - 0_
          - suffixed key columns - {concept_1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ogedengbe.tosan.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

[DEBUG] 2021-11-01 22:28:35.764 [main] EntityLoader - Static select for entity ogedengbe.tosan.model.Concept [NONE]: select concept0_.concept_id as concept_1_1_0_, concept0_.category as category2_1_0_, concept0_.category_id as category3_1_0_, concept0_.name as name4_1_0_, concept0_.description as descript5_1_0_, concept0_.user_id as user_id6_1_0_, user1_.user_id as user_id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.password as password4_2_1_, user1_.username as username5_2_1_ from concept concept0_ left outer join user user1_ on concept0_.user_id=user1_.user_id where concept0_.concept_id=?
[DEBUG] 2021-11-01 22:28:35.765 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52d3fafd]
[DEBUG] 2021-11-01 22:28:35.768 [main] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2021-11-01 22:28:35.768 [main] MetamodelGraphWalker - Visiting attribute path : categoryId
[DEBUG] 2021-11-01 22:28:35.771 [main] MetamodelGraphWalker - Visiting attribute path : conceptName
[DEBUG] 2021-11-01 22:28:35.771 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2021-11-01 22:28:35.771 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-11-01 22:28:35.771 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1376883]
[DEBUG] 2021-11-01 22:28:35.772 [main] MetamodelGraphWalker - Visiting attribute path : user.concepts
[DEBUG] 2021-11-01 22:28:35.772 [main] MetamodelGraphWalker - Property path deemed to be circular : user.concepts
[DEBUG] 2021-11-01 22:28:35.772 [main] MetamodelGraphWalker - Visiting attribute path : user.firstName
[DEBUG] 2021-11-01 22:28:35.772 [main] MetamodelGraphWalker - Visiting attribute path : user.lastName
[DEBUG] 2021-11-01 22:28:35.772 [main] MetamodelGraphWalker - Visiting attribute path : user.password
[DEBUG] 2021-11-01 22:28:35.772 [main] MetamodelGraphWalker - Visiting attribute path : user.userName
[DEBUG] 2021-11-01 22:28:35.772 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-11-01 22:28:35.774 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-11-01 22:28:35.774 [main] LoadPlanTreePrinter - LoadPlan(entity=ogedengbe.tosan.model.Concept)
    - Returns
       - EntityReturnImpl(entity=ogedengbe.tosan.model.Concept, querySpaceUid=<gen:0>, path=ogedengbe.tosan.model.Concept)
          - EntityAttributeFetchImpl(entity=ogedengbe.tosan.model.User, querySpaceUid=<gen:1>, path=ogedengbe.tosan.model.Concept.user)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ogedengbe.tosan.model.Concept)
          - SQL table alias mapping - concept0_
          - alias suffix - 0_
          - suffixed key columns - {concept_1_1_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ogedengbe.tosan.model.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {user_id1_2_1_}

[DEBUG] 2021-11-01 22:28:35.775 [main] EntityLoader - Static select for entity ogedengbe.tosan.model.Concept [READ]: select concept0_.concept_id as concept_1_1_0_, concept0_.category as category2_1_0_, concept0_.category_id as category3_1_0_, concept0_.name as name4_1_0_, concept0_.description as descript5_1_0_, concept0_.user_id as user_id6_1_0_, user1_.user_id as user_id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.password as password4_2_1_, user1_.username as username5_2_1_ from concept concept0_ left outer join user user1_ on concept0_.user_id=user1_.user_id where concept0_.concept_id=?
[DEBUG] 2021-11-01 22:28:35.794 [main] Loader - Static select for action ACTION_MERGE on entity ogedengbe.tosan.model.Concept: select concept0_.concept_id as concept_1_1_0_, concept0_.category as category2_1_0_, concept0_.category_id as category3_1_0_, concept0_.name as name4_1_0_, concept0_.description as descript5_1_0_, concept0_.user_id as user_id6_1_0_ from concept concept0_ where concept0_.concept_id=?
[DEBUG] 2021-11-01 22:28:35.795 [main] Loader - Static select for action ACTION_REFRESH on entity ogedengbe.tosan.model.Concept: select concept0_.concept_id as concept_1_1_0_, concept0_.category as category2_1_0_, concept0_.category_id as category3_1_0_, concept0_.name as name4_1_0_, concept0_.description as descript5_1_0_, concept0_.user_id as user_id6_1_0_ from concept concept0_ where concept0_.concept_id=?
[DEBUG] 2021-11-01 22:28:35.795 [main] AbstractEntityPersister - Static SQL for entity: ogedengbe.tosan.model.Category
[DEBUG] 2021-11-01 22:28:35.795 [main] AbstractEntityPersister -  Version select: select category_id from category where category_id =?
[DEBUG] 2021-11-01 22:28:35.795 [main] AbstractEntityPersister -  Snapshot select: select category_.category_id, category_.category as category2_0_, category_.definition as definiti3_0_ from category category_ where category_.category_id=?
[DEBUG] 2021-11-01 22:28:35.797 [main] AbstractEntityPersister -  Insert 0: insert into category (category, definition, category_id) values (?, ?, ?)
[DEBUG] 2021-11-01 22:28:35.797 [main] AbstractEntityPersister -  Update 0: update category set category=?, definition=? where category_id=?
[DEBUG] 2021-11-01 22:28:35.799 [main] AbstractEntityPersister -  Delete 0: delete from category where category_id=?
[DEBUG] 2021-11-01 22:28:35.799 [main] AbstractEntityPersister -  Identity insert: insert into category (category, definition) values (?, ?)
[DEBUG] 2021-11-01 22:28:35.800 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73c48264]
[DEBUG] 2021-11-01 22:28:35.801 [main] MetamodelGraphWalker - Visiting attribute path : categoryName
[DEBUG] 2021-11-01 22:28:35.801 [main] MetamodelGraphWalker - Visiting attribute path : definition
[DEBUG] 2021-11-01 22:28:35.801 [main] MetamodelGraphWalker - Visiting attribute path : concept
[DEBUG] 2021-11-01 22:28:35.801 [main] MetamodelGraphWalker - Property path deemed to be circular : concept
[DEBUG] 2021-11-01 22:28:35.801 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-11-01 22:28:35.801 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-11-01 22:28:35.801 [main] LoadPlanTreePrinter - LoadPlan(entity=ogedengbe.tosan.model.Category)
    - Returns
       - EntityReturnImpl(entity=ogedengbe.tosan.model.Category, querySpaceUid=<gen:0>, path=ogedengbe.tosan.model.Category)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ogedengbe.tosan.model.Category)
          - SQL table alias mapping - category0_
          - alias suffix - 0_
          - suffixed key columns - {category1_0_0_}

[DEBUG] 2021-11-01 22:28:35.801 [main] EntityLoader - Static select for entity ogedengbe.tosan.model.Category [NONE]: select category0_.category_id as category1_0_0_, category0_.category as category2_0_0_, category0_.definition as definiti3_0_0_ from category category0_ where category0_.category_id=?
[DEBUG] 2021-11-01 22:28:35.802 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bcec67e]
[DEBUG] 2021-11-01 22:28:35.803 [main] MetamodelGraphWalker - Visiting attribute path : categoryName
[DEBUG] 2021-11-01 22:28:35.803 [main] MetamodelGraphWalker - Visiting attribute path : definition
[DEBUG] 2021-11-01 22:28:35.803 [main] MetamodelGraphWalker - Visiting attribute path : concept
[DEBUG] 2021-11-01 22:28:35.803 [main] MetamodelGraphWalker - Property path deemed to be circular : concept
[DEBUG] 2021-11-01 22:28:35.803 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-11-01 22:28:35.803 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-11-01 22:28:35.803 [main] LoadPlanTreePrinter - LoadPlan(entity=ogedengbe.tosan.model.Category)
    - Returns
       - EntityReturnImpl(entity=ogedengbe.tosan.model.Category, querySpaceUid=<gen:0>, path=ogedengbe.tosan.model.Category)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ogedengbe.tosan.model.Category)
          - SQL table alias mapping - category0_
          - alias suffix - 0_
          - suffixed key columns - {category1_0_0_}

[DEBUG] 2021-11-01 22:28:35.803 [main] EntityLoader - Static select for entity ogedengbe.tosan.model.Category [READ]: select category0_.category_id as category1_0_0_, category0_.category as category2_0_0_, category0_.definition as definiti3_0_0_ from category category0_ where category0_.category_id=?
[DEBUG] 2021-11-01 22:28:35.804 [main] Loader - Static select for action ACTION_MERGE on entity ogedengbe.tosan.model.Category: select category0_.category_id as category1_0_0_, category0_.category as category2_0_0_, category0_.definition as definiti3_0_0_ from category category0_ where category0_.category_id=?
[DEBUG] 2021-11-01 22:28:35.804 [main] Loader - Static select for action ACTION_REFRESH on entity ogedengbe.tosan.model.Category: select category0_.category_id as category1_0_0_, category0_.category as category2_0_0_, category0_.definition as definiti3_0_0_ from category category0_ where category0_.category_id=?
[DEBUG] 2021-11-01 22:28:35.804 [main] AbstractEntityPersister - Static SQL for entity: ogedengbe.tosan.model.User
[DEBUG] 2021-11-01 22:28:35.804 [main] AbstractEntityPersister -  Version select: select user_id from user where user_id =?
[DEBUG] 2021-11-01 22:28:35.804 [main] AbstractEntityPersister -  Snapshot select: select user_.user_id, user_.first_name as first_na2_2_, user_.last_name as last_nam3_2_, user_.password as password4_2_, user_.username as username5_2_ from user user_ where user_.user_id=?
[DEBUG] 2021-11-01 22:28:35.804 [main] AbstractEntityPersister -  Insert 0: insert into user (first_name, last_name, password, username, user_id) values (?, ?, ?, ?, ?)
[DEBUG] 2021-11-01 22:28:35.804 [main] AbstractEntityPersister -  Update 0: update user set first_name=?, last_name=?, password=?, username=? where user_id=?
[DEBUG] 2021-11-01 22:28:35.804 [main] AbstractEntityPersister -  Delete 0: delete from user where user_id=?
[DEBUG] 2021-11-01 22:28:35.804 [main] AbstractEntityPersister -  Identity insert: insert into user (first_name, last_name, password, username) values (?, ?, ?, ?)
[DEBUG] 2021-11-01 22:28:35.804 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a2fce12]
[DEBUG] 2021-11-01 22:28:35.804 [main] MetamodelGraphWalker - Visiting attribute path : concepts
[DEBUG] 2021-11-01 22:28:35.805 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41bfa9e9]
[DEBUG] 2021-11-01 22:28:35.806 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22da2fe6]
[DEBUG] 2021-11-01 22:28:35.808 [main] MetamodelGraphWalker - Visiting attribute path : concepts.category
[DEBUG] 2021-11-01 22:28:35.809 [main] MetamodelGraphWalker - Visiting attribute path : concepts.categoryId
[DEBUG] 2021-11-01 22:28:35.809 [main] MetamodelGraphWalker - Visiting attribute path : concepts.conceptName
[DEBUG] 2021-11-01 22:28:35.809 [main] MetamodelGraphWalker - Visiting attribute path : concepts.description
[DEBUG] 2021-11-01 22:28:35.809 [main] MetamodelGraphWalker - Visiting attribute path : concepts.user
[DEBUG] 2021-11-01 22:28:35.809 [main] MetamodelGraphWalker - Property path deemed to be circular : concepts.user
[DEBUG] 2021-11-01 22:28:35.809 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-11-01 22:28:35.809 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-11-01 22:28:35.809 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-11-01 22:28:35.809 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-11-01 22:28:35.810 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-11-01 22:28:35.810 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-11-01 22:28:35.814 [main] LoadPlanTreePrinter - LoadPlan(entity=ogedengbe.tosan.model.User)
    - Returns
       - EntityReturnImpl(entity=ogedengbe.tosan.model.User, querySpaceUid=<gen:0>, path=ogedengbe.tosan.model.User)
          - CollectionAttributeFetchImpl(collection=ogedengbe.tosan.model.User.concepts, querySpaceUid=<gen:1>, path=ogedengbe.tosan.model.User.concepts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ogedengbe.tosan.model.Concept, querySpaceUid=<gen:2>, path=ogedengbe.tosan.model.User.concepts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ogedengbe.tosan.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(concepts)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=ogedengbe.tosan.model.User.concepts)
                - SQL table alias mapping - concepts1_
                - alias suffix - 1_
                - suffixed key columns - {user_id6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - concept_1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ogedengbe.tosan.model.Concept)
                      - SQL table alias mapping - concepts1_
                      - alias suffix - 2_
                      - suffixed key columns - {concept_1_1_2_}

[DEBUG] 2021-11-01 22:28:35.815 [main] EntityLoader - Static select for entity ogedengbe.tosan.model.User [NONE]: select user0_.user_id as user_id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.password as password4_2_0_, user0_.username as username5_2_0_, concepts1_.user_id as user_id6_1_1_, concepts1_.concept_id as concept_1_1_1_, concepts1_.concept_id as concept_1_1_2_, concepts1_.category as category2_1_2_, concepts1_.category_id as category3_1_2_, concepts1_.name as name4_1_2_, concepts1_.description as descript5_1_2_, concepts1_.user_id as user_id6_1_2_ from user user0_ left outer join concept concepts1_ on user0_.user_id=concepts1_.user_id where user0_.user_id=?
[DEBUG] 2021-11-01 22:28:35.815 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f73ce28]
[DEBUG] 2021-11-01 22:28:35.815 [main] MetamodelGraphWalker - Visiting attribute path : concepts
[DEBUG] 2021-11-01 22:28:35.815 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2282400e]
[DEBUG] 2021-11-01 22:28:35.815 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@543d5863]
[DEBUG] 2021-11-01 22:28:35.815 [main] MetamodelGraphWalker - Visiting attribute path : concepts.category
[DEBUG] 2021-11-01 22:28:35.815 [main] MetamodelGraphWalker - Visiting attribute path : concepts.categoryId
[DEBUG] 2021-11-01 22:28:35.815 [main] MetamodelGraphWalker - Visiting attribute path : concepts.conceptName
[DEBUG] 2021-11-01 22:28:35.815 [main] MetamodelGraphWalker - Visiting attribute path : concepts.description
[DEBUG] 2021-11-01 22:28:35.815 [main] MetamodelGraphWalker - Visiting attribute path : concepts.user
[DEBUG] 2021-11-01 22:28:35.815 [main] MetamodelGraphWalker - Property path deemed to be circular : concepts.user
[DEBUG] 2021-11-01 22:28:35.816 [main] MetamodelGraphWalker - Visiting attribute path : firstName
[DEBUG] 2021-11-01 22:28:35.816 [main] MetamodelGraphWalker - Visiting attribute path : lastName
[DEBUG] 2021-11-01 22:28:35.816 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2021-11-01 22:28:35.816 [main] MetamodelGraphWalker - Visiting attribute path : userName
[DEBUG] 2021-11-01 22:28:35.816 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-11-01 22:28:35.816 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-11-01 22:28:35.821 [main] LoadPlanTreePrinter - LoadPlan(entity=ogedengbe.tosan.model.User)
    - Returns
       - EntityReturnImpl(entity=ogedengbe.tosan.model.User, querySpaceUid=<gen:0>, path=ogedengbe.tosan.model.User)
          - CollectionAttributeFetchImpl(collection=ogedengbe.tosan.model.User.concepts, querySpaceUid=<gen:1>, path=ogedengbe.tosan.model.User.concepts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=ogedengbe.tosan.model.Concept, querySpaceUid=<gen:2>, path=ogedengbe.tosan.model.User.concepts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=ogedengbe.tosan.model.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_2_0_}
          - JOIN (JoinDefinedByMetadata(concepts)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=ogedengbe.tosan.model.User.concepts)
                - SQL table alias mapping - concepts1_
                - alias suffix - 1_
                - suffixed key columns - {user_id6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - concept_1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=ogedengbe.tosan.model.Concept)
                      - SQL table alias mapping - concepts1_
                      - alias suffix - 2_
                      - suffixed key columns - {concept_1_1_2_}

[DEBUG] 2021-11-01 22:28:35.821 [main] EntityLoader - Static select for entity ogedengbe.tosan.model.User [READ]: select user0_.user_id as user_id1_2_0_, user0_.first_name as first_na2_2_0_, user0_.last_name as last_nam3_2_0_, user0_.password as password4_2_0_, user0_.username as username5_2_0_, concepts1_.user_id as user_id6_1_1_, concepts1_.concept_id as concept_1_1_1_, concepts1_.concept_id as concept_1_1_2_, concepts1_.category as category2_1_2_, concepts1_.category_id as category3_1_2_, concepts1_.name as name4_1_2_, concepts1_.description as descript5_1_2_, concepts1_.user_id as user_id6_1_2_ from user user0_ left outer join concept concepts1_ on user0_.user_id=concepts1_.user_id where user0_.user_id=?
[DEBUG] 2021-11-01 22:28:35.822 [main] Loader - Static select for action ACTION_MERGE on entity ogedengbe.tosan.model.User: select user0_.user_id as user_id1_2_1_, user0_.first_name as first_na2_2_1_, user0_.last_name as last_nam3_2_1_, user0_.password as password4_2_1_, user0_.username as username5_2_1_, concepts1_.user_id as user_id6_1_3_, concepts1_.concept_id as concept_1_1_3_, concepts1_.concept_id as concept_1_1_0_, concepts1_.category as category2_1_0_, concepts1_.category_id as category3_1_0_, concepts1_.name as name4_1_0_, concepts1_.description as descript5_1_0_, concepts1_.user_id as user_id6_1_0_ from user user0_ left outer join concept concepts1_ on user0_.user_id=concepts1_.user_id where user0_.user_id=?
[DEBUG] 2021-11-01 22:28:35.823 [main] Loader - Static select for action ACTION_REFRESH on entity ogedengbe.tosan.model.User: select user0_.user_id as user_id1_2_1_, user0_.first_name as first_na2_2_1_, user0_.last_name as last_nam3_2_1_, user0_.password as password4_2_1_, user0_.username as username5_2_1_, concepts1_.user_id as user_id6_1_3_, concepts1_.concept_id as concept_1_1_3_, concepts1_.concept_id as concept_1_1_0_, concepts1_.category as category2_1_0_, concepts1_.category_id as category3_1_0_, concepts1_.name as name4_1_0_, concepts1_.description as descript5_1_0_, concepts1_.user_id as user_id6_1_0_ from user user0_ left outer join concept concepts1_ on user0_.user_id=concepts1_.user_id where user0_.user_id=?
[DEBUG] 2021-11-01 22:28:35.826 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45292ec1]
[DEBUG] 2021-11-01 22:28:35.826 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a7c678b]
[DEBUG] 2021-11-01 22:28:35.827 [main] MetamodelGraphWalker - Visiting attribute path : category
[DEBUG] 2021-11-01 22:28:35.827 [main] MetamodelGraphWalker - Visiting attribute path : categoryId
[DEBUG] 2021-11-01 22:28:35.827 [main] MetamodelGraphWalker - Visiting attribute path : conceptName
[DEBUG] 2021-11-01 22:28:35.827 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2021-11-01 22:28:35.828 [main] MetamodelGraphWalker - Visiting attribute path : user
[DEBUG] 2021-11-01 22:28:35.828 [main] MetamodelGraphWalker - Property path deemed to be circular : user
[DEBUG] 2021-11-01 22:28:35.828 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2021-11-01 22:28:35.829 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2021-11-01 22:28:35.830 [main] LoadPlanTreePrinter - LoadPlan(collection=ogedengbe.tosan.model.User.concepts)
    - Returns
       - CollectionReturnImpl(collection=ogedengbe.tosan.model.User.concepts, querySpaceUid=<gen:0>, path=[ogedengbe.tosan.model.User.concepts])
          - (collection element) CollectionFetchableElementEntityGraph(entity=ogedengbe.tosan.model.Concept, querySpaceUid=<gen:1>, path=[ogedengbe.tosan.model.User.concepts].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=ogedengbe.tosan.model.User.concepts)
          - SQL table alias mapping - concepts0_
          - alias suffix - 0_
          - suffixed key columns - {user_id6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - concept_1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=ogedengbe.tosan.model.Concept)
                - SQL table alias mapping - concepts0_
                - alias suffix - 1_
                - suffixed key columns - {concept_1_1_1_}

[DEBUG] 2021-11-01 22:28:35.830 [main] CollectionLoader - Static select for collection ogedengbe.tosan.model.User.concepts: select concepts0_.user_id as user_id6_1_0_, concepts0_.concept_id as concept_1_1_0_, concepts0_.concept_id as concept_1_1_1_, concepts0_.category as category2_1_1_, concepts0_.category_id as category3_1_1_, concepts0_.name as name4_1_1_, concepts0_.description as descript5_1_1_, concepts0_.user_id as user_id6_1_1_ from concept concepts0_ where concepts0_.user_id=?
[DEBUG] 2021-11-01 22:28:35.861 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2021-11-01 22:28:35.861 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2021-11-01 22:28:35.861 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2021-11-01 22:28:35.865 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[INFO ] 2021-11-01 22:28:35.865 [main] JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2021-11-01 22:28:35.866 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2021-11-01 22:28:35.866 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2021-11-01 22:28:35.867 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3c19592c
[DEBUG] 2021-11-01 22:28:35.872 [main] SessionFactoryRegistry - Registering SessionFactory: d7805d33-5331-433d-abb2-916954041058 (<unnamed>)
[DEBUG] 2021-11-01 22:28:35.873 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2021-11-01 22:28:36.163 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2021-11-01 22:28:36.210 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Category as generatedAlias0 where generatedAlias0.categoryName like :param0
[DEBUG] 2021-11-01 22:28:36.223 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@26c8b296
[DEBUG] 2021-11-01 22:28:36.248 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from ogedengbe.tosan.model.Category as generatedAlias0 where generatedAlias0.categoryName like :param0
[DEBUG] 2021-11-01 22:28:36.259 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-11-01 22:28:36.272 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[IDENT] Node: 'ogedengbe'
    |  |     |  |  |  \-[IDENT] Node: 'tosan'
    |  |     |  |  \-[IDENT] Node: 'model'
    |  |     |  \-[IDENT] Node: 'Category'
    |  |     \-[ALIAS] Node: 'generatedAlias0'
    |  \-[SELECT] Node: 'select'
    |     \-[IDENT] Node: 'generatedAlias0'
    \-[WHERE] Node: 'where'
       \-[LIKE] Node: 'like'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'generatedAlias0'
          |  \-[IDENT] Node: 'categoryName'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'param0'

[DEBUG] 2021-11-01 22:28:36.293 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2021-11-01 22:28:36.308 [main] FromElement - FromClause{level=1} : ogedengbe.tosan.model.Category (generatedAlias0) -> category0_
[DEBUG] 2021-11-01 22:28:36.311 [main] FromReferenceNode - Resolved : generatedAlias0 -> category0_.category_id
[DEBUG] 2021-11-01 22:28:36.313 [main] FromReferenceNode - Resolved : generatedAlias0 -> category0_.category_id
[DEBUG] 2021-11-01 22:28:36.319 [main] DotNode - getDataType() : categoryName -> org.hibernate.type.StringType@6d2d99fc
[DEBUG] 2021-11-01 22:28:36.320 [main] FromReferenceNode - Resolved : generatedAlias0.categoryName -> category0_.category
[DEBUG] 2021-11-01 22:28:36.321 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2021-11-01 22:28:36.321 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} category0_.category_id ) ( FromClause{level=1} category category0_ ) ( where ( like ( category0_.category category0_.category_id categoryName ) ? ) ) )
[DEBUG] 2021-11-01 22:28:36.330 [main] JoinProcessor - Using FROM fragment [category category0_]
[DEBUG] 2021-11-01 22:28:36.332 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2021-11-01 22:28:36.335 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (category)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'category0_.category_id as category1_0_' {alias=generatedAlias0, className=ogedengbe.tosan.model.Category, tableAlias=category0_}
    |  \-[SQL_TOKEN] SqlFragment: 'category0_.category as category2_0_, category0_.definition as definiti3_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[category0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'category category0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=category,tableAlias=category0_,origin=null,columns={,className=ogedengbe.tosan.model.Category}}
    \-[WHERE] SqlNode: 'where'
       \-[LIKE] BinaryLogicOperatorNode: 'like'
          +-[DOT] DotNode: 'category0_.category' {propertyName=categoryName,dereferenceType=PRIMITIVE,getPropertyPath=categoryName,path=generatedAlias0.categoryName,tableAlias=category0_,className=ogedengbe.tosan.model.Category,classAlias=generatedAlias0}
          |  +-[ALIAS_REF] IdentNode: 'category0_.category_id' {alias=generatedAlias0, className=ogedengbe.tosan.model.Category, tableAlias=category0_}
          |  \-[IDENT] IdentNode: 'categoryName' {originalText=categoryName}
          \-[NAMED_PARAM] ParameterNode: '?' {name=param0, expectedType=org.hibernate.type.StringType@6d2d99fc}

[DEBUG] 2021-11-01 22:28:36.336 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-11-01 22:28:36.340 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from ogedengbe.tosan.model.Category as generatedAlias0 where generatedAlias0.categoryName like :param0
[DEBUG] 2021-11-01 22:28:36.340 [main] QueryTranslatorImpl - SQL: select category0_.category_id as category1_0_, category0_.category as category2_0_, category0_.definition as definiti3_0_ from category category0_ where category0_.category like ?
[DEBUG] 2021-11-01 22:28:36.340 [main] ErrorTracker - throwQueryException() : no errors
[DEBUG] 2021-11-01 22:28:36.355 [main] SQL - select category0_.category_id as category1_0_, category0_.category as category2_0_, category0_.definition as definiti3_0_ from category category0_ where category0_.category like ?
[DEBUG] 2021-11-01 22:28:36.385 [main] Loader - Result set row: 0
[DEBUG] 2021-11-01 22:28:36.387 [main] Loader - Result row: EntityKey[ogedengbe.tosan.model.Category#1]
[DEBUG] 2021-11-01 22:28:36.392 [main] Loader - Result set row: 1
[DEBUG] 2021-11-01 22:28:36.392 [main] Loader - Result row: EntityKey[ogedengbe.tosan.model.Category#2]
[DEBUG] 2021-11-01 22:28:36.392 [main] Loader - Result set row: 2
[DEBUG] 2021-11-01 22:28:36.393 [main] Loader - Result row: EntityKey[ogedengbe.tosan.model.Category#4]
[DEBUG] 2021-11-01 22:28:36.393 [main] Loader - Result set row: 3
[DEBUG] 2021-11-01 22:28:36.393 [main] Loader - Result row: EntityKey[ogedengbe.tosan.model.Category#5]
[DEBUG] 2021-11-01 22:28:36.393 [main] Loader - Result set row: 4
[DEBUG] 2021-11-01 22:28:36.393 [main] Loader - Result row: EntityKey[ogedengbe.tosan.model.Category#8]
[DEBUG] 2021-11-01 22:28:36.393 [main] Loader - Result set row: 5
[DEBUG] 2021-11-01 22:28:36.394 [main] Loader - Result row: EntityKey[ogedengbe.tosan.model.Category#9]
[DEBUG] 2021-11-01 22:28:36.394 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Category#1]
[DEBUG] 2021-11-01 22:28:36.395 [main] TwoPhaseLoad - Processing attribute `categoryName` : value = Characters
[DEBUG] 2021-11-01 22:28:36.395 [main] TwoPhaseLoad - Attribute (`categoryName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.395 [main] TwoPhaseLoad - Processing attribute `definition` : value = A catalog for all of the main characters of your universe.
[DEBUG] 2021-11-01 22:28:36.395 [main] TwoPhaseLoad - Attribute (`definition`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.395 [main] TwoPhaseLoad - Processing attribute `concept` : value = 1
[DEBUG] 2021-11-01 22:28:36.395 [main] TwoPhaseLoad - Attribute (`concept`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.411 [main] SQL - select concept0_.concept_id as concept_1_1_0_, concept0_.category as category2_1_0_, concept0_.category_id as category3_1_0_, concept0_.name as name4_1_0_, concept0_.description as descript5_1_0_, concept0_.user_id as user_id6_1_0_, user1_.user_id as user_id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.password as password4_2_1_, user1_.username as username5_2_1_ from concept concept0_ left outer join user user1_ on concept0_.user_id=user1_.user_id where concept0_.concept_id=?
[DEBUG] 2021-11-01 22:28:36.420 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-11-01 22:28:36.428 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-11-01 22:28:36.429 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Concept#1]
[DEBUG] 2021-11-01 22:28:36.429 [main] TwoPhaseLoad - Processing attribute `category` : value = Abstracts
[DEBUG] 2021-11-01 22:28:36.429 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.429 [main] TwoPhaseLoad - Processing attribute `categoryId` : value = 9
[DEBUG] 2021-11-01 22:28:36.429 [main] TwoPhaseLoad - Attribute (`categoryId`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.429 [main] TwoPhaseLoad - Processing attribute `conceptName` : value = Jedi
[DEBUG] 2021-11-01 22:28:36.429 [main] TwoPhaseLoad - Attribute (`conceptName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.429 [main] TwoPhaseLoad - Processing attribute `description` : value = An ancient religion whose followers defend the galaxy and are beleived to have legendary powers.
[DEBUG] 2021-11-01 22:28:36.429 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.429 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-11-01 22:28:36.429 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.430 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Concept#1]
[DEBUG] 2021-11-01 22:28:36.430 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.User#1]
[DEBUG] 2021-11-01 22:28:36.433 [main] TwoPhaseLoad - Processing attribute `concepts` : value = NOT NULL COLLECTION
[DEBUG] 2021-11-01 22:28:36.433 [main] TwoPhaseLoad - Attribute (`concepts`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.444 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Bruce
[DEBUG] 2021-11-01 22:28:36.444 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.444 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Wayne
[DEBUG] 2021-11-01 22:28:36.444 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.444 [main] TwoPhaseLoad - Processing attribute `password` : value = gothamcity1
[DEBUG] 2021-11-01 22:28:36.444 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.445 [main] TwoPhaseLoad - Processing attribute `userName` : value = bbatman
[DEBUG] 2021-11-01 22:28:36.445 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.445 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.User#1]
[DEBUG] 2021-11-01 22:28:36.445 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-11-01 22:28:36.445 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : ogedengbe.tosan.model.Concept#1
[DEBUG] 2021-11-01 22:28:36.445 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Category#1]
[DEBUG] 2021-11-01 22:28:36.445 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Category#2]
[DEBUG] 2021-11-01 22:28:36.446 [main] TwoPhaseLoad - Processing attribute `categoryName` : value = Creatures
[DEBUG] 2021-11-01 22:28:36.446 [main] TwoPhaseLoad - Attribute (`categoryName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.446 [main] TwoPhaseLoad - Processing attribute `definition` : value = A catalog for all of the creatures and beasties you create for your universe.
[DEBUG] 2021-11-01 22:28:36.446 [main] TwoPhaseLoad - Attribute (`definition`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.446 [main] TwoPhaseLoad - Processing attribute `concept` : value = 2
[DEBUG] 2021-11-01 22:28:36.446 [main] TwoPhaseLoad - Attribute (`concept`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.446 [main] SQL - select concept0_.concept_id as concept_1_1_0_, concept0_.category as category2_1_0_, concept0_.category_id as category3_1_0_, concept0_.name as name4_1_0_, concept0_.description as descript5_1_0_, concept0_.user_id as user_id6_1_0_, user1_.user_id as user_id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.password as password4_2_1_, user1_.username as username5_2_1_ from concept concept0_ left outer join user user1_ on concept0_.user_id=user1_.user_id where concept0_.concept_id=?
[DEBUG] 2021-11-01 22:28:36.452 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-11-01 22:28:36.452 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-11-01 22:28:36.453 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Concept#2]
[DEBUG] 2021-11-01 22:28:36.453 [main] TwoPhaseLoad - Processing attribute `category` : value = Abstracts
[DEBUG] 2021-11-01 22:28:36.453 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.453 [main] TwoPhaseLoad - Processing attribute `categoryId` : value = 9
[DEBUG] 2021-11-01 22:28:36.453 [main] TwoPhaseLoad - Attribute (`categoryId`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.455 [main] TwoPhaseLoad - Processing attribute `conceptName` : value = The Force
[DEBUG] 2021-11-01 22:28:36.455 [main] TwoPhaseLoad - Attribute (`conceptName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.455 [main] TwoPhaseLoad - Processing attribute `description` : value = The name for the energy that ties the universe together. Jedi and Sith can manipulate this energy.
[DEBUG] 2021-11-01 22:28:36.455 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.455 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-11-01 22:28:36.455 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.456 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Concept#2]
[DEBUG] 2021-11-01 22:28:36.456 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-11-01 22:28:36.456 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : ogedengbe.tosan.model.Concept#2
[DEBUG] 2021-11-01 22:28:36.456 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Category#2]
[DEBUG] 2021-11-01 22:28:36.456 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Category#4]
[DEBUG] 2021-11-01 22:28:36.456 [main] TwoPhaseLoad - Processing attribute `categoryName` : value = Weapons
[DEBUG] 2021-11-01 22:28:36.456 [main] TwoPhaseLoad - Attribute (`categoryName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.456 [main] TwoPhaseLoad - Processing attribute `definition` : value = A catalog for all of the weapons that are used in your universe.
[DEBUG] 2021-11-01 22:28:36.456 [main] TwoPhaseLoad - Attribute (`definition`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.456 [main] TwoPhaseLoad - Processing attribute `concept` : value = 4
[DEBUG] 2021-11-01 22:28:36.456 [main] TwoPhaseLoad - Attribute (`concept`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.456 [main] SQL - select concept0_.concept_id as concept_1_1_0_, concept0_.category as category2_1_0_, concept0_.category_id as category3_1_0_, concept0_.name as name4_1_0_, concept0_.description as descript5_1_0_, concept0_.user_id as user_id6_1_0_, user1_.user_id as user_id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.password as password4_2_1_, user1_.username as username5_2_1_ from concept concept0_ left outer join user user1_ on concept0_.user_id=user1_.user_id where concept0_.concept_id=?
[DEBUG] 2021-11-01 22:28:36.460 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-11-01 22:28:36.461 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-11-01 22:28:36.464 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Concept#4]
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Processing attribute `category` : value = Characters
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Processing attribute `categoryId` : value = 1
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Attribute (`categoryId`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Processing attribute `conceptName` : value = Han Solo
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Attribute (`conceptName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Processing attribute `description` : value = A human male smuggler who goes on to become a leader of the Rebel Alliance against the empire.
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Concept#4]
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.User#2]
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Processing attribute `concepts` : value = NOT NULL COLLECTION
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Attribute (`concepts`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Clark
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Kent
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.465 [main] TwoPhaseLoad - Processing attribute `password` : value = metropolis1
[DEBUG] 2021-11-01 22:28:36.466 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.466 [main] TwoPhaseLoad - Processing attribute `userName` : value = supermn
[DEBUG] 2021-11-01 22:28:36.466 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.466 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.User#2]
[DEBUG] 2021-11-01 22:28:36.466 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-11-01 22:28:36.466 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : ogedengbe.tosan.model.Concept#4
[DEBUG] 2021-11-01 22:28:36.468 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Category#4]
[DEBUG] 2021-11-01 22:28:36.468 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Category#5]
[DEBUG] 2021-11-01 22:28:36.468 [main] TwoPhaseLoad - Processing attribute `categoryName` : value = Accessories
[DEBUG] 2021-11-01 22:28:36.468 [main] TwoPhaseLoad - Attribute (`categoryName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.468 [main] TwoPhaseLoad - Processing attribute `definition` : value = A catalog for all of the equipment, gadgets and tools that are available in your universe.
[DEBUG] 2021-11-01 22:28:36.470 [main] TwoPhaseLoad - Attribute (`definition`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.472 [main] TwoPhaseLoad - Processing attribute `concept` : value = 5
[DEBUG] 2021-11-01 22:28:36.472 [main] TwoPhaseLoad - Attribute (`concept`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.472 [main] SQL - select concept0_.concept_id as concept_1_1_0_, concept0_.category as category2_1_0_, concept0_.category_id as category3_1_0_, concept0_.name as name4_1_0_, concept0_.description as descript5_1_0_, concept0_.user_id as user_id6_1_0_, user1_.user_id as user_id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.password as password4_2_1_, user1_.username as username5_2_1_ from concept concept0_ left outer join user user1_ on concept0_.user_id=user1_.user_id where concept0_.concept_id=?
[DEBUG] 2021-11-01 22:28:36.483 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-11-01 22:28:36.483 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-11-01 22:28:36.483 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Concept#5]
[DEBUG] 2021-11-01 22:28:36.483 [main] TwoPhaseLoad - Processing attribute `category` : value = Creatures
[DEBUG] 2021-11-01 22:28:36.483 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.483 [main] TwoPhaseLoad - Processing attribute `categoryId` : value = 2
[DEBUG] 2021-11-01 22:28:36.483 [main] TwoPhaseLoad - Attribute (`categoryId`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.483 [main] TwoPhaseLoad - Processing attribute `conceptName` : value = Chewbacca
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Attribute (`conceptName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Processing attribute `description` : value = A Wookie companion and partner of Han Solo who also goes on to become a leader in the Rebel Alliance.
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Concept#5]
[DEBUG] 2021-11-01 22:28:36.484 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-11-01 22:28:36.484 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : ogedengbe.tosan.model.Concept#5
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Category#5]
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Category#8]
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Processing attribute `categoryName` : value = Mecha
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Attribute (`categoryName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Processing attribute `definition` : value = A catalog for all of the mechanical robots, androids or battlesuits used in your universe.
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Attribute (`definition`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Processing attribute `concept` : value = 8
[DEBUG] 2021-11-01 22:28:36.484 [main] TwoPhaseLoad - Attribute (`concept`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.484 [main] SQL - select concept0_.concept_id as concept_1_1_0_, concept0_.category as category2_1_0_, concept0_.category_id as category3_1_0_, concept0_.name as name4_1_0_, concept0_.description as descript5_1_0_, concept0_.user_id as user_id6_1_0_, user1_.user_id as user_id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.password as password4_2_1_, user1_.username as username5_2_1_ from concept concept0_ left outer join user user1_ on concept0_.user_id=user1_.user_id where concept0_.concept_id=?
[DEBUG] 2021-11-01 22:28:36.486 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-11-01 22:28:36.487 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Concept#8]
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Processing attribute `category` : value = Mecha
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Processing attribute `categoryId` : value = 9
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Attribute (`categoryId`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Processing attribute `conceptName` : value = C3P0
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Attribute (`conceptName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Processing attribute `description` : value = A protocol droid that is the companion to R2D2 and help the Rebel Alliance. Also built by anakin Skywalker.
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Concept#8]
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.User#3]
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Processing attribute `concepts` : value = NOT NULL COLLECTION
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Attribute (`concepts`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.489 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Diana
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Prince
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Processing attribute `password` : value = paradiseis1
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Processing attribute `userName` : value = wnwoman
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.User#3]
[DEBUG] 2021-11-01 22:28:36.490 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-11-01 22:28:36.490 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : ogedengbe.tosan.model.Concept#8
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Category#8]
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Category#9]
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Processing attribute `categoryName` : value = Abstracts
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Attribute (`categoryName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Processing attribute `definition` : value = A catalog for all of the ideas, beliefs, rules, codes and other intangible elements of your universe.
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Attribute (`definition`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Processing attribute `concept` : value = 9
[DEBUG] 2021-11-01 22:28:36.490 [main] TwoPhaseLoad - Attribute (`concept`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.490 [main] SQL - select concept0_.concept_id as concept_1_1_0_, concept0_.category as category2_1_0_, concept0_.category_id as category3_1_0_, concept0_.name as name4_1_0_, concept0_.description as descript5_1_0_, concept0_.user_id as user_id6_1_0_, user1_.user_id as user_id1_2_1_, user1_.first_name as first_na2_2_1_, user1_.last_name as last_nam3_2_1_, user1_.password as password4_2_1_, user1_.username as username5_2_1_ from concept concept0_ left outer join user user1_ on concept0_.user_id=user1_.user_id where concept0_.concept_id=?
[DEBUG] 2021-11-01 22:28:36.495 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-11-01 22:28:36.495 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2021-11-01 22:28:36.495 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Concept#9]
[DEBUG] 2021-11-01 22:28:36.495 [main] TwoPhaseLoad - Processing attribute `category` : value = Creatures
[DEBUG] 2021-11-01 22:28:36.495 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.495 [main] TwoPhaseLoad - Processing attribute `categoryId` : value = 2
[DEBUG] 2021-11-01 22:28:36.495 [main] TwoPhaseLoad - Attribute (`categoryId`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.496 [main] TwoPhaseLoad - Processing attribute `conceptName` : value = Wookiee
[DEBUG] 2021-11-01 22:28:36.496 [main] TwoPhaseLoad - Attribute (`conceptName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.496 [main] TwoPhaseLoad - Processing attribute `description` : value = Wookiees are a species of tall, hairy humanoids that are native to the planet Kashyyyk.
[DEBUG] 2021-11-01 22:28:36.496 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.496 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2021-11-01 22:28:36.496 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.496 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Concept#9]
[DEBUG] 2021-11-01 22:28:36.500 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.User#4]
[DEBUG] 2021-11-01 22:28:36.501 [main] TwoPhaseLoad - Processing attribute `concepts` : value = NOT NULL COLLECTION
[DEBUG] 2021-11-01 22:28:36.501 [main] TwoPhaseLoad - Attribute (`concepts`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.501 [main] TwoPhaseLoad - Processing attribute `firstName` : value = Barry
[DEBUG] 2021-11-01 22:28:36.501 [main] TwoPhaseLoad - Attribute (`firstName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.501 [main] TwoPhaseLoad - Processing attribute `lastName` : value = Allen
[DEBUG] 2021-11-01 22:28:36.501 [main] TwoPhaseLoad - Attribute (`lastName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.501 [main] TwoPhaseLoad - Processing attribute `password` : value = speedster1
[DEBUG] 2021-11-01 22:28:36.501 [main] TwoPhaseLoad - Attribute (`password`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.501 [main] TwoPhaseLoad - Processing attribute `userName` : value = fflash
[DEBUG] 2021-11-01 22:28:36.501 [main] TwoPhaseLoad - Attribute (`userName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.501 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.User#4]
[DEBUG] 2021-11-01 22:28:36.501 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-11-01 22:28:36.501 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : ogedengbe.tosan.model.Concept#9
[DEBUG] 2021-11-01 22:28:36.502 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Category#9]
[DEBUG] 2021-11-01 22:28:36.503 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ogedengbe.tosan.model.User.concepts#4]
[DEBUG] 2021-11-01 22:28:36.504 [main] SQL - select concepts0_.user_id as user_id6_1_0_, concepts0_.concept_id as concept_1_1_0_, concepts0_.concept_id as concept_1_1_1_, concepts0_.category as category2_1_1_, concepts0_.category_id as category3_1_1_, concepts0_.name as name4_1_1_, concepts0_.description as descript5_1_1_, concepts0_.user_id as user_id6_1_1_ from concept concepts0_ where concepts0_.user_id=?
[DEBUG] 2021-11-01 22:28:36.510 [main] ResultSetProcessorImpl - Preparing collection initializer : [ogedengbe.tosan.model.User.concepts#4]
[DEBUG] 2021-11-01 22:28:36.516 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-11-01 22:28:36.516 [main] CollectionReferenceInitializerImpl - Found row of collection: [ogedengbe.tosan.model.User.concepts#4]
[DEBUG] 2021-11-01 22:28:36.517 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-11-01 22:28:36.517 [main] CollectionReferenceInitializerImpl - Found row of collection: [ogedengbe.tosan.model.User.concepts#4]
[DEBUG] 2021-11-01 22:28:36.517 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-11-01 22:28:36.517 [main] CollectionReferenceInitializerImpl - Found row of collection: [ogedengbe.tosan.model.User.concepts#4]
[DEBUG] 2021-11-01 22:28:36.518 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Concept#10]
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Processing attribute `category` : value = Weapons
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Processing attribute `categoryId` : value = 4
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Attribute (`categoryId`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Processing attribute `conceptName` : value = Bowcaster
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Attribute (`conceptName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Processing attribute `description` : value = A bowcaster is also known as a laser crossbow. Is a handcrafted projectile weapon commonly used by Wookiees.
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Concept#10]
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Concept#11]
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Processing attribute `category` : value = Environments
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Processing attribute `categoryId` : value = 3
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Attribute (`categoryId`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Processing attribute `conceptName` : value = Kashyyyk
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Attribute (`conceptName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Processing attribute `description` : value = Kashyyyk is a tree-covered forest planet and the homeworld of the Wookiee species.
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Processing attribute `user` : value = 4
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.519 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Concept#11]
[DEBUG] 2021-11-01 22:28:36.527 [main] CollectionLoadContext - 1 collections were found in result set for role: ogedengbe.tosan.model.User.concepts
[DEBUG] 2021-11-01 22:28:36.527 [main] CollectionLoadContext - Collection fully initialized: [ogedengbe.tosan.model.User.concepts#4]
[DEBUG] 2021-11-01 22:28:36.527 [main] CollectionLoadContext - 1 collections initialized for role: ogedengbe.tosan.model.User.concepts
[DEBUG] 2021-11-01 22:28:36.527 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-11-01 22:28:36.527 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-11-01 22:28:36.527 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ogedengbe.tosan.model.User.concepts#3]
[DEBUG] 2021-11-01 22:28:36.527 [main] SQL - select concepts0_.user_id as user_id6_1_0_, concepts0_.concept_id as concept_1_1_0_, concepts0_.concept_id as concept_1_1_1_, concepts0_.category as category2_1_1_, concepts0_.category_id as category3_1_1_, concepts0_.name as name4_1_1_, concepts0_.description as descript5_1_1_, concepts0_.user_id as user_id6_1_1_ from concept concepts0_ where concepts0_.user_id=?
[DEBUG] 2021-11-01 22:28:36.530 [main] ResultSetProcessorImpl - Preparing collection initializer : [ogedengbe.tosan.model.User.concepts#3]
[DEBUG] 2021-11-01 22:28:36.530 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-11-01 22:28:36.530 [main] CollectionReferenceInitializerImpl - Found row of collection: [ogedengbe.tosan.model.User.concepts#3]
[DEBUG] 2021-11-01 22:28:36.530 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-11-01 22:28:36.530 [main] CollectionReferenceInitializerImpl - Found row of collection: [ogedengbe.tosan.model.User.concepts#3]
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Concept#7]
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Processing attribute `category` : value = Mecha
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Processing attribute `categoryId` : value = 8
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Attribute (`categoryId`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Processing attribute `conceptName` : value = R2D2
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Attribute (`conceptName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Processing attribute `description` : value = An astromech droid that contains a lot of knowledge valuable to the Rebel Alliance. Built by Anakin Skywalker.
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Processing attribute `user` : value = 3
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.531 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Concept#7]
[DEBUG] 2021-11-01 22:28:36.532 [main] CollectionLoadContext - 1 collections were found in result set for role: ogedengbe.tosan.model.User.concepts
[DEBUG] 2021-11-01 22:28:36.532 [main] CollectionLoadContext - Collection fully initialized: [ogedengbe.tosan.model.User.concepts#3]
[DEBUG] 2021-11-01 22:28:36.532 [main] CollectionLoadContext - 1 collections initialized for role: ogedengbe.tosan.model.User.concepts
[DEBUG] 2021-11-01 22:28:36.532 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-11-01 22:28:36.532 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-11-01 22:28:36.532 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ogedengbe.tosan.model.User.concepts#2]
[DEBUG] 2021-11-01 22:28:36.532 [main] SQL - select concepts0_.user_id as user_id6_1_0_, concepts0_.concept_id as concept_1_1_0_, concepts0_.concept_id as concept_1_1_1_, concepts0_.category as category2_1_1_, concepts0_.category_id as category3_1_1_, concepts0_.name as name4_1_1_, concepts0_.description as descript5_1_1_, concepts0_.user_id as user_id6_1_1_ from concept concepts0_ where concepts0_.user_id=?
[DEBUG] 2021-11-01 22:28:36.533 [main] ResultSetProcessorImpl - Preparing collection initializer : [ogedengbe.tosan.model.User.concepts#2]
[DEBUG] 2021-11-01 22:28:36.533 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-11-01 22:28:36.534 [main] CollectionReferenceInitializerImpl - Found row of collection: [ogedengbe.tosan.model.User.concepts#2]
[DEBUG] 2021-11-01 22:28:36.534 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-11-01 22:28:36.534 [main] CollectionReferenceInitializerImpl - Found row of collection: [ogedengbe.tosan.model.User.concepts#2]
[DEBUG] 2021-11-01 22:28:36.534 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-11-01 22:28:36.535 [main] CollectionReferenceInitializerImpl - Found row of collection: [ogedengbe.tosan.model.User.concepts#2]
[DEBUG] 2021-11-01 22:28:36.535 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Concept#6]
[DEBUG] 2021-11-01 22:28:36.535 [main] TwoPhaseLoad - Processing attribute `category` : value = Vehicles
[DEBUG] 2021-11-01 22:28:36.535 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.536 [main] TwoPhaseLoad - Processing attribute `categoryId` : value = 7
[DEBUG] 2021-11-01 22:28:36.536 [main] TwoPhaseLoad - Attribute (`categoryId`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.536 [main] TwoPhaseLoad - Processing attribute `conceptName` : value = Millennium Falcon
[DEBUG] 2021-11-01 22:28:36.536 [main] TwoPhaseLoad - Attribute (`conceptName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.536 [main] TwoPhaseLoad - Processing attribute `description` : value = Han Solos unique and modified space cruiser and cargo ship. Known as the fastest ship in the galaxy.
[DEBUG] 2021-11-01 22:28:36.536 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.536 [main] TwoPhaseLoad - Processing attribute `user` : value = 2
[DEBUG] 2021-11-01 22:28:36.536 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.536 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Concept#6]
[DEBUG] 2021-11-01 22:28:36.536 [main] CollectionLoadContext - 1 collections were found in result set for role: ogedengbe.tosan.model.User.concepts
[DEBUG] 2021-11-01 22:28:36.536 [main] CollectionLoadContext - Collection fully initialized: [ogedengbe.tosan.model.User.concepts#2]
[DEBUG] 2021-11-01 22:28:36.536 [main] CollectionLoadContext - 1 collections initialized for role: ogedengbe.tosan.model.User.concepts
[DEBUG] 2021-11-01 22:28:36.536 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-11-01 22:28:36.536 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-11-01 22:28:36.538 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [ogedengbe.tosan.model.User.concepts#1]
[DEBUG] 2021-11-01 22:28:36.538 [main] SQL - select concepts0_.user_id as user_id6_1_0_, concepts0_.concept_id as concept_1_1_0_, concepts0_.concept_id as concept_1_1_1_, concepts0_.category as category2_1_1_, concepts0_.category_id as category3_1_1_, concepts0_.name as name4_1_1_, concepts0_.description as descript5_1_1_, concepts0_.user_id as user_id6_1_1_ from concept concepts0_ where concepts0_.user_id=?
[DEBUG] 2021-11-01 22:28:36.545 [main] ResultSetProcessorImpl - Preparing collection initializer : [ogedengbe.tosan.model.User.concepts#1]
[DEBUG] 2021-11-01 22:28:36.546 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2021-11-01 22:28:36.546 [main] CollectionReferenceInitializerImpl - Found row of collection: [ogedengbe.tosan.model.User.concepts#1]
[DEBUG] 2021-11-01 22:28:36.546 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2021-11-01 22:28:36.547 [main] CollectionReferenceInitializerImpl - Found row of collection: [ogedengbe.tosan.model.User.concepts#1]
[DEBUG] 2021-11-01 22:28:36.547 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2021-11-01 22:28:36.547 [main] CollectionReferenceInitializerImpl - Found row of collection: [ogedengbe.tosan.model.User.concepts#1]
[DEBUG] 2021-11-01 22:28:36.547 [main] TwoPhaseLoad - Resolving attributes for [ogedengbe.tosan.model.Concept#3]
[DEBUG] 2021-11-01 22:28:36.547 [main] TwoPhaseLoad - Processing attribute `category` : value = Characters
[DEBUG] 2021-11-01 22:28:36.547 [main] TwoPhaseLoad - Attribute (`category`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.547 [main] TwoPhaseLoad - Processing attribute `categoryId` : value = 1
[DEBUG] 2021-11-01 22:28:36.547 [main] TwoPhaseLoad - Attribute (`categoryId`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.547 [main] TwoPhaseLoad - Processing attribute `conceptName` : value = Darth Vader
[DEBUG] 2021-11-01 22:28:36.547 [main] TwoPhaseLoad - Attribute (`conceptName`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.548 [main] TwoPhaseLoad - Processing attribute `description` : value = An evil Sith Lord named Anakin Skywalker. Underground leader of the Empire and father to Luke Skywalker and Leia Organa.
[DEBUG] 2021-11-01 22:28:36.548 [main] TwoPhaseLoad - Attribute (`description`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.548 [main] TwoPhaseLoad - Processing attribute `user` : value = 1
[DEBUG] 2021-11-01 22:28:36.548 [main] TwoPhaseLoad - Attribute (`user`)  - enhanced for lazy-loading? - false
[DEBUG] 2021-11-01 22:28:36.548 [main] TwoPhaseLoad - Done materializing entity [ogedengbe.tosan.model.Concept#3]
[DEBUG] 2021-11-01 22:28:36.548 [main] CollectionLoadContext - 1 collections were found in result set for role: ogedengbe.tosan.model.User.concepts
[DEBUG] 2021-11-01 22:28:36.548 [main] CollectionLoadContext - Collection fully initialized: [ogedengbe.tosan.model.User.concepts#1]
[DEBUG] 2021-11-01 22:28:36.548 [main] CollectionLoadContext - 1 collections initialized for role: ogedengbe.tosan.model.User.concepts
[DEBUG] 2021-11-01 22:28:36.548 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2021-11-01 22:28:36.548 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2021-11-01 22:28:36.554 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
