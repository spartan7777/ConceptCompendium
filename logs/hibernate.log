[DEBUG] 2021-04-04 17:45:04.011 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:04.029 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:04.047 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2021-04-04 17:45:04.292 [main] Version - HHH000412: Hibernate Core {5.4.4.Final}
[DEBUG] 2021-04-04 17:45:04.302 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2021-04-04 17:45:04.825 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:04.827 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:04.844 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:05.384 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:05.413 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:05.414 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2021-04-04 17:45:05.439 [main] Version - HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
[DEBUG] 2021-04-04 17:45:05.506 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:05.506 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:05.507 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:05.507 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:05.508 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:05.511 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:05.512 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:05.512 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:05.512 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:05.513 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:05.513 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:05.513 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:05.514 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:05.514 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:05.514 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:05.515 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:05.515 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:05.515 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:05.516 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:05.517 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:05.517 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:05.518 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:05.518 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:05.519 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:05.520 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:05.520 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:05.520 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:05.522 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:05.522 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:05.523 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:05.523 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:05.524 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:05.524 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:05.525 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:05.525 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:05.526 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:05.526 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:05.527 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:05.527 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:05.532 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:05.532 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:05.533 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:05.533 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:05.535 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:05.535 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:05.536 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:05.537 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:05.543 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:05.544 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:05.545 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:05.545 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:05.547 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:05.548 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:05.549 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:05.549 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:05.550 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:05.550 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:05.551 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:05.555 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:05.555 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:05.556 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:05.556 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:05.557 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:05.557 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:05.560 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:05.561 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:05.561 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:05.562 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:05.562 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:05.563 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:05.563 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:05.564 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:05.564 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:05.565 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:05.565 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:05.565 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:05.566 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:05.566 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:05.566 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:05.567 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:05.571 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:05.571 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:05.572 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:05.572 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:05.573 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:05.573 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:05.573 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:05.574 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:05.574 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:05.577 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:05.577 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:05.577 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:05.580 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:05.581 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:05.581 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:05.582 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:05.582 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:05.584 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:05.585 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:05.588 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:05.588 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:05.593 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:05.596 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:05.596 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:05.598 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@10cd6753
[DEBUG] 2021-04-04 17:45:05.598 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71ad3d8a
[DEBUG] 2021-04-04 17:45:05.598 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@47af099e
[DEBUG] 2021-04-04 17:45:05.598 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@700f518a
[DEBUG] 2021-04-04 17:45:05.598 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b835727
[DEBUG] 2021-04-04 17:45:05.598 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@13da7ab0
[DEBUG] 2021-04-04 17:45:05.598 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2c8662ac
[DEBUG] 2021-04-04 17:45:05.602 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@260ff5b7
[DEBUG] 2021-04-04 17:45:05.652 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:05.652 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:05.653 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:05.654 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:05.655 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:05.657 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:05.658 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:05.661 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:05.662 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:05.668 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:05.668 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:05.668 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:05.668 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:05.675 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:05.680 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:05.680 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:05.680 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:05.932 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:06.151 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:06.164 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:06.165 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:06.241 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:06.275 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:06.336 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:06.418 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:06.422 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5853ca50] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1a0d96a5]
[DEBUG] 2021-04-04 17:45:06.505 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:06.542 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:06.547 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:06.553 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:06.585 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.589 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:06.590 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:06.592 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:06.593 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:06.603 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:06.605 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:06.612 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.615 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.629 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.629 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.630 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:06.631 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:06.631 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:06.631 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:06.638 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:06.640 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.640 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:06.640 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:06.644 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:06.644 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:06.645 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.645 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:06.645 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:06.645 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:06.645 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:06.645 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.646 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:06.646 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:06.646 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:06.646 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:06.646 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.647 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:06.647 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:06.647 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:06.647 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:06.651 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:06.655 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:06.655 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:06.655 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:06.660 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.661 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:06.662 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:06.662 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:06.662 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:06.662 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:06.662 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.664 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:06.664 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:06.664 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:06.664 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:06.664 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:06.664 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.664 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.666 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.668 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.668 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:06.669 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:06.669 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:06.669 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:06.669 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:06.669 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.671 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:06.671 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:06.671 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:06.671 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:06.674 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:06.674 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:06.674 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:06.674 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:06.679 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.683 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:06.684 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:06.684 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:06.684 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:06.684 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:06.684 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.685 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:06.685 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:06.686 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:06.686 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:06.686 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.686 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:06.686 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:06.686 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:06.686 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:06.686 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.687 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:06.687 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:06.687 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:06.687 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:06.691 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.691 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:06.691 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:06.691 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:06.691 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:06.691 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.692 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:06.693 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:06.694 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:06.694 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:06.694 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:06.694 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:06.696 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:06.705 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:06.705 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:06.706 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:06.706 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:06.706 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:06.707 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:06.707 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:06.707 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:06.707 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:06.707 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:06.707 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:06.707 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:06.707 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:06.707 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:06.791 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:06.793 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:06.793 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:06.813 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:06.814 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:06.828 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:06.931 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:06.935 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:06.935 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:06.936 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:06.936 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:06.936 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:06.936 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:06.936 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:06.936 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:06.937 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:06.937 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:06.937 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:06.937 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:06.939 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:06.939 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:06.940 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:06.941 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:06.941 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:06.941 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:06.941 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:06.941 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:06.941 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:06.941 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:06.941 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:06.944 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:06.944 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:06.944 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:06.944 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:06.945 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:06.945 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:06.945 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:06.945 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:06.945 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:06.945 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:06.945 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:06.945 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:06.945 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:06.946 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:06.947 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:06.948 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:06.948 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:06.948 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:06.948 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:06.948 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:06.948 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:06.948 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:06.950 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:06.950 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:06.950 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:06.950 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:06.950 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:06.950 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:06.950 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:06.951 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:06.952 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:06.953 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:06.953 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:06.954 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:06.954 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:06.955 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:06.955 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:06.955 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1642eeae
[DEBUG] 2021-04-04 17:45:06.955 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3440e9cd
[DEBUG] 2021-04-04 17:45:06.955 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@28a9494b
[DEBUG] 2021-04-04 17:45:06.955 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a09303
[DEBUG] 2021-04-04 17:45:06.955 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1163a27
[DEBUG] 2021-04-04 17:45:06.955 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@322ba549
[DEBUG] 2021-04-04 17:45:06.955 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@502a4156
[DEBUG] 2021-04-04 17:45:06.955 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5416f8db
[DEBUG] 2021-04-04 17:45:06.962 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:06.962 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:06.963 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:06.965 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:06.965 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:06.965 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:07.023 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:07.115 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:07.115 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:07.115 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:07.115 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:07.116 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:07.116 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:07.147 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:07.148 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@59b32539] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5b47731f]
[DEBUG] 2021-04-04 17:45:07.148 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:07.149 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:07.149 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:07.149 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:07.150 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.150 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:07.150 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:07.150 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:07.150 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:07.150 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:07.150 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:07.150 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.150 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.150 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.151 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.151 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:07.151 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:07.151 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:07.151 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:07.151 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:07.162 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.162 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:07.162 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:07.162 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:07.162 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:07.162 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.162 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:07.162 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:07.163 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:07.163 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:07.163 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.163 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:07.163 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:07.169 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:07.169 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:07.171 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.171 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:07.172 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:07.172 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:07.172 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:07.173 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:07.173 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:07.173 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:07.173 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:07.174 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.174 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:07.174 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:07.174 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:07.175 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:07.175 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:07.192 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.192 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:07.192 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:07.192 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:07.192 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:07.193 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:07.195 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.200 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.201 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.202 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.202 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:07.202 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:07.202 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:07.202 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:07.202 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:07.202 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.202 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:07.205 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:07.205 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:07.205 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:07.205 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:07.205 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:07.205 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:07.205 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:07.206 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.206 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:07.206 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:07.206 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:07.206 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:07.206 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:07.207 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.207 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:07.207 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:07.207 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:07.207 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:07.207 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.207 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:07.207 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:07.207 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:07.207 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:07.207 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.207 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:07.207 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:07.212 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:07.212 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:07.212 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.212 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:07.212 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:07.212 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:07.212 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:07.213 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.213 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:07.213 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:07.213 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:07.213 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:07.213 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:07.213 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.213 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:07.218 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:07.219 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:07.284 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:07.284 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:07.284 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:07.306 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:07.306 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:07.312 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:07.385 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:07.388 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:07.388 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:07.388 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:07.389 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:07.390 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:07.390 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:07.390 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:07.390 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:07.390 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:07.392 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:07.393 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:07.393 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:07.393 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:07.393 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:07.395 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:07.395 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:07.395 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:07.395 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:07.395 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:07.395 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:07.395 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:07.395 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:07.395 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:07.395 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:07.395 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:07.396 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:07.396 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:07.396 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:07.396 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:07.397 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:07.398 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:07.403 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:07.403 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:07.404 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:07.404 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:07.404 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:07.404 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:07.404 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:07.404 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:07.404 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:07.404 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:07.404 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:07.404 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:07.404 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:07.405 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:07.405 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:07.408 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:07.409 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:07.412 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:07.412 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:07.412 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@9c73fff
[DEBUG] 2021-04-04 17:45:07.412 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71cea1b8
[DEBUG] 2021-04-04 17:45:07.412 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@659f226a
[DEBUG] 2021-04-04 17:45:07.412 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2e463f4
[DEBUG] 2021-04-04 17:45:07.412 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@32ec9c90
[DEBUG] 2021-04-04 17:45:07.412 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@36ab3814
[DEBUG] 2021-04-04 17:45:07.412 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2abbd0d9
[DEBUG] 2021-04-04 17:45:07.412 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@b61edb9
[DEBUG] 2021-04-04 17:45:07.413 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:07.414 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:07.414 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:07.414 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:07.414 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:07.479 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:07.564 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:07.564 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:07.564 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:07.564 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:07.564 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:07.565 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:07.595 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:07.595 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2e7bf7b7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@2fb25f4c]
[DEBUG] 2021-04-04 17:45:07.596 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:07.596 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:07.596 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:07.610 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:07.616 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.617 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:07.617 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:07.617 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:07.617 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:07.617 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:07.617 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:07.617 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.617 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.617 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.617 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.617 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:07.618 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:07.618 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:07.622 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:07.622 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:07.622 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.622 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:07.626 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:07.626 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:07.626 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:07.626 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.626 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:07.626 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:07.626 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:07.626 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:07.626 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.627 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:07.627 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:07.627 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:07.627 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:07.627 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.627 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:07.627 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:07.627 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:07.627 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:07.627 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:07.627 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:07.627 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:07.627 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:07.639 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.639 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:07.639 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:07.639 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:07.639 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:07.648 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:07.648 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.648 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:07.648 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:07.652 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:07.652 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:07.652 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:07.652 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.652 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.653 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.653 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.653 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:07.653 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:07.654 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:07.654 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:07.654 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:07.654 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.654 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:07.654 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:07.654 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:07.654 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:07.654 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:07.654 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:07.654 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:07.654 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:07.655 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.655 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:07.655 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:07.655 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:07.655 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:07.660 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:07.661 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.661 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:07.661 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:07.661 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:07.661 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:07.661 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.661 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:07.661 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:07.661 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:07.661 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:07.662 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.662 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:07.662 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:07.662 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:07.662 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:07.662 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.662 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:07.662 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:07.662 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:07.662 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:07.662 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.662 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:07.662 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:07.662 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:07.662 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:07.663 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:07.663 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:07.663 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:07.668 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:07.668 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:07.668 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:07.668 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:07.668 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:07.668 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:07.668 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:07.669 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:07.669 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:07.669 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:07.669 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:07.670 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:07.670 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:07.670 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:07.776 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:07.776 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:07.776 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:07.825 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:07.825 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:07.829 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:07.897 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:07.897 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:07.897 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:07.897 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:07.897 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:07.897 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:07.897 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:07.897 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:07.897 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:07.897 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:07.897 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:07.897 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:07.898 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:07.899 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:07.904 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:07.904 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:07.904 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:07.904 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:07.905 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:07.906 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:07.906 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:07.906 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:07.909 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:07.909 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:07.910 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:07.911 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:07.911 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:07.911 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:07.911 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:07.911 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:07.911 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:07.911 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:07.911 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@a6c54c3
[DEBUG] 2021-04-04 17:45:07.911 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@580fd26b
[DEBUG] 2021-04-04 17:45:07.916 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@78fe204a
[DEBUG] 2021-04-04 17:45:07.916 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1290ed28
[DEBUG] 2021-04-04 17:45:07.916 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7a3269f5
[DEBUG] 2021-04-04 17:45:07.916 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5c887052
[DEBUG] 2021-04-04 17:45:07.916 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@55fdf7f9
[DEBUG] 2021-04-04 17:45:07.916 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4091b9c3
[DEBUG] 2021-04-04 17:45:07.918 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:07.918 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:07.918 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:07.918 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:07.918 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:07.918 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:07.918 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:07.921 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:07.921 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:07.921 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:07.921 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:07.921 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:07.921 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:07.921 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:07.922 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:07.922 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:07.922 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:07.979 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:08.079 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:08.079 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:08.080 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:08.080 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:08.080 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:08.080 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:08.103 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:08.104 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7b1e5e55] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4c1d59cd]
[DEBUG] 2021-04-04 17:45:08.104 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:08.104 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:08.104 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:08.105 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:08.105 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.105 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:08.105 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:08.105 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:08.105 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:08.106 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:08.106 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:08.106 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.106 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.106 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.106 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.132 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:08.132 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:08.132 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:08.132 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:08.134 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:08.134 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.135 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:08.135 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:08.135 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:08.135 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:08.135 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.136 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:08.136 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:08.136 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:08.136 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:08.136 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.136 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:08.136 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:08.136 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:08.136 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:08.137 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.137 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:08.137 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:08.137 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.137 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:08.143 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:08.143 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:08.143 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:08.143 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:08.144 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.144 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:08.144 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:08.144 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:08.144 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:08.144 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:08.144 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.144 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:08.145 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:08.145 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:08.145 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:08.145 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:08.145 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.145 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.145 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.145 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.145 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:08.145 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:08.145 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:08.145 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:08.145 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:08.145 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.146 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:08.146 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:08.146 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.146 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:08.162 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:08.162 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:08.162 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:08.162 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:08.162 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.163 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:08.163 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:08.163 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:08.163 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:08.163 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:08.163 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.163 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:08.163 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:08.163 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:08.163 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:08.163 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.163 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:08.163 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:08.163 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:08.163 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:08.164 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.180 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:08.180 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:08.180 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:08.180 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:08.180 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.180 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:08.180 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:08.180 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:08.180 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:08.180 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.180 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:08.180 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:08.188 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:08.188 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:08.188 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:08.188 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.188 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:08.189 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:08.191 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:08.261 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:08.261 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:08.261 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:08.295 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:08.295 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:08.304 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:08.356 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:08.357 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:08.357 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:08.357 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:08.358 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:08.359 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:08.359 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:08.359 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:08.359 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:08.359 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:08.364 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:08.364 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:08.364 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:08.364 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:08.364 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:08.365 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:08.366 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:08.366 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:08.366 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:08.367 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:08.367 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:08.367 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:08.367 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:08.367 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:08.367 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:08.368 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:08.369 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:08.369 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:08.369 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:08.370 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@68c9e023
[DEBUG] 2021-04-04 17:45:08.370 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1624775
[DEBUG] 2021-04-04 17:45:08.370 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1e7f19b4
[DEBUG] 2021-04-04 17:45:08.370 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@235b4cb8
[DEBUG] 2021-04-04 17:45:08.370 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4346808
[DEBUG] 2021-04-04 17:45:08.370 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17fede14
[DEBUG] 2021-04-04 17:45:08.370 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@712ac7e6
[DEBUG] 2021-04-04 17:45:08.370 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@86d6bf7
[DEBUG] 2021-04-04 17:45:08.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:08.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:08.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:08.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:08.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:08.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:08.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:08.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:08.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:08.373 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:08.374 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:08.374 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:08.374 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:08.374 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:08.381 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:08.381 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:08.381 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:08.428 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:08.509 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:08.509 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:08.509 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:08.509 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:08.509 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:08.510 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:08.538 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:08.539 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5fcd1c5f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3cc30dee]
[DEBUG] 2021-04-04 17:45:08.539 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:08.540 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:08.540 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:08.540 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:08.540 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.540 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:08.540 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:08.541 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:08.541 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:08.541 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:08.541 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:08.541 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.541 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.556 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.556 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.556 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:08.556 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:08.559 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:08.559 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:08.559 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:08.559 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.559 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:08.559 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:08.559 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:08.559 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:08.560 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.560 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:08.560 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:08.560 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:08.560 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:08.560 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.563 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:08.563 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:08.563 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:08.563 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:08.563 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.563 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:08.563 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:08.563 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.564 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:08.564 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:08.564 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:08.564 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:08.564 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:08.564 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.565 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:08.565 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:08.565 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:08.565 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:08.565 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:08.573 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.573 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:08.573 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:08.573 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:08.573 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:08.574 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:08.574 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.574 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.574 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.574 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.574 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:08.574 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:08.574 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:08.574 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:08.574 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:08.574 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.574 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:08.574 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:08.575 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.575 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:08.584 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:08.584 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:08.584 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:08.584 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:08.586 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.586 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:08.586 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:08.586 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:08.587 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:08.588 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:08.588 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.588 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:08.588 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:08.588 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:08.588 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:08.588 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.588 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:08.588 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:08.588 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:08.588 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:08.588 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.588 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:08.588 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:08.589 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:08.591 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:08.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.591 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:08.591 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:08.591 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:08.591 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:08.591 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.591 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:08.591 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:08.591 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:08.592 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:08.592 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:08.592 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.592 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:08.593 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:08.634 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:08.634 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:08.634 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:08.650 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:08.650 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:08.651 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:08.720 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:08.721 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:08.721 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:08.721 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:08.721 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:08.722 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:08.723 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:08.723 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:08.723 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:08.723 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:08.723 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:08.724 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:08.726 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:08.726 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:08.726 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:08.726 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:08.726 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:08.727 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@488f3dd1
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@2091833
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7bc58891
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6411504a
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@554188ac
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1f43cab7
[DEBUG] 2021-04-04 17:45:08.728 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@481558ce
[DEBUG] 2021-04-04 17:45:08.729 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2668c286
[DEBUG] 2021-04-04 17:45:08.732 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:08.732 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:08.735 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:08.735 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:08.736 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:08.736 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:08.781 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:08.850 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:08.850 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:08.850 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:08.850 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:08.851 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:08.851 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:08.878 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:08.879 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@53f0d09c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@47acd13b]
[DEBUG] 2021-04-04 17:45:08.879 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:08.879 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:08.879 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:08.879 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:08.895 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.896 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:08.896 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:08.896 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:08.896 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:08.896 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:08.896 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:08.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.896 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.896 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:08.896 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:08.897 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:08.897 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:08.897 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:08.897 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.897 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:08.897 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:08.897 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:08.897 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:08.897 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.897 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:08.897 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:08.897 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:08.897 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:08.897 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.897 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:08.897 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:08.898 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:08.898 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:08.918 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.918 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:08.918 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:08.918 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.918 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:08.921 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:08.922 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:08.922 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:08.922 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:08.922 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.922 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:08.927 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:08.928 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:08.928 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:08.928 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:08.928 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.928 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:08.928 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:08.928 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:08.928 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:08.928 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:08.928 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.928 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.929 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.929 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.929 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:08.929 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:08.929 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:08.929 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:08.929 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:08.929 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.929 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:08.929 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:08.929 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.929 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:08.929 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:08.940 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:08.940 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:08.940 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:08.941 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.941 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:08.941 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:08.941 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:08.941 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:08.941 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:08.947 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.947 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:08.947 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:08.948 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:08.948 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:08.948 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.948 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:08.948 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:08.948 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:08.948 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:08.948 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.948 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:08.948 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:08.948 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:08.948 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:08.948 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.948 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:08.948 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:08.948 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:08.948 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:08.949 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.949 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:08.949 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:08.949 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:08.949 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:08.949 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:08.949 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:08.949 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:08.952 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:08.953 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:09.000 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:09.000 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:09.000 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:09.009 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:09.009 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:09.014 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:09.081 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:09.086 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:09.086 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:09.086 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:09.087 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:09.088 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:09.088 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:09.088 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:09.088 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:09.088 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:09.088 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:09.088 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:09.088 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:09.088 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:09.088 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:09.088 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:09.092 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:09.094 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:09.094 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:09.094 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:09.094 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:09.094 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:09.095 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:09.096 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:09.096 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:09.096 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:09.096 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:09.096 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:09.096 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:09.096 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:09.096 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:09.096 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4751e8b9
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7af443a3
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7b25ab31
[DEBUG] 2021-04-04 17:45:09.097 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2001e48c
[DEBUG] 2021-04-04 17:45:09.098 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@68ddd415
[DEBUG] 2021-04-04 17:45:09.098 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@306c7bf6
[DEBUG] 2021-04-04 17:45:09.098 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@664632e9
[DEBUG] 2021-04-04 17:45:09.098 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@494c8f29
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:09.105 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:09.105 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:09.105 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:09.106 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:09.149 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:09.244 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:09.244 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:09.244 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:09.244 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:09.245 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:09.245 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:09.260 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:09.260 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e957e2f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@691500ab]
[DEBUG] 2021-04-04 17:45:09.261 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:09.261 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:09.261 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:09.261 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:09.262 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.262 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:09.262 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:09.262 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:09.262 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:09.262 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:09.262 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:09.262 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.262 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.262 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.262 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.262 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:09.263 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:09.263 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:09.263 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:09.263 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:09.263 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.263 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:09.263 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:09.263 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:09.263 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:09.263 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.263 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:09.263 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:09.263 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:09.263 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:09.263 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.263 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:09.263 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:09.263 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:09.264 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:09.264 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.292 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:09.293 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:09.293 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:09.293 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:09.293 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:09.293 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:09.293 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:09.293 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:09.301 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.301 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:09.301 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:09.301 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:09.301 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:09.302 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:09.302 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.302 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:09.302 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:09.302 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:09.302 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:09.302 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:09.302 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.302 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.302 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.302 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.302 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:09.302 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:09.303 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:09.303 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:09.303 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:09.324 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.324 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:09.324 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:09.324 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:09.324 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:09.324 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:09.329 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:09.329 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:09.329 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:09.329 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.329 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:09.329 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:09.329 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:09.332 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:09.332 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:09.332 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.332 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:09.332 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:09.332 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:09.332 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:09.332 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.332 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:09.332 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:09.332 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:09.332 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:09.332 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.332 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:09.333 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:09.333 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:09.333 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:09.333 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.333 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:09.333 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:09.333 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:09.333 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:09.333 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.333 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:09.333 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:09.333 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:09.333 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:09.333 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:09.333 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.334 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:09.334 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:09.335 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:09.335 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:09.423 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:09.424 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:09.425 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:09.444 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:09.449 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:09.453 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:09.529 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:09.530 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:09.530 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:09.531 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:09.531 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:09.531 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:09.531 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:09.531 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:09.531 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:09.533 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:09.534 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:09.535 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:09.536 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:09.539 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:09.539 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:09.539 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:09.539 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:09.539 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c53f292
[DEBUG] 2021-04-04 17:45:09.539 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@46fb0c33
[DEBUG] 2021-04-04 17:45:09.539 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b009e7b
[DEBUG] 2021-04-04 17:45:09.539 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@270a620
[DEBUG] 2021-04-04 17:45:09.539 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@41f4039e
[DEBUG] 2021-04-04 17:45:09.539 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5ff00507
[DEBUG] 2021-04-04 17:45:09.539 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@603cabc4
[DEBUG] 2021-04-04 17:45:09.540 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@67fa5045
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:09.545 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:09.545 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:09.546 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:09.546 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:09.598 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:09.673 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:09.673 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:09.673 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:09.673 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:09.673 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:09.674 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:09.694 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:09.694 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b791a81] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4391a2d8]
[DEBUG] 2021-04-04 17:45:09.695 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:09.695 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:09.695 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:09.695 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:09.707 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.718 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:09.719 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:09.721 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:09.722 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:09.722 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:09.722 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:09.722 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.722 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.722 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.722 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.722 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:09.722 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:09.722 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:09.722 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:09.723 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:09.723 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.723 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:09.723 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:09.723 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:09.723 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:09.723 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.723 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:09.728 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:09.728 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:09.728 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:09.729 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.729 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:09.729 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:09.729 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:09.729 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:09.729 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.729 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:09.729 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:09.729 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:09.729 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:09.729 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:09.729 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:09.729 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:09.729 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:09.730 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.730 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:09.730 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:09.730 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:09.730 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:09.730 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:09.740 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.740 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:09.740 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:09.740 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:09.740 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:09.740 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:09.740 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.740 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.740 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.740 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.741 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:09.741 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:09.741 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:09.741 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:09.741 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:09.741 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.741 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:09.741 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:09.741 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:09.741 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:09.741 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:09.741 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:09.741 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:09.741 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:09.742 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.742 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:09.742 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:09.742 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:09.742 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:09.742 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:09.742 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.742 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:09.742 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:09.742 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:09.742 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:09.742 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.758 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:09.758 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:09.758 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:09.758 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:09.758 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.758 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:09.758 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:09.758 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:09.758 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:09.758 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.758 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:09.758 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:09.758 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:09.758 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:09.762 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.762 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:09.762 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:09.762 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:09.762 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:09.763 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:09.763 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:09.763 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:09.767 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:09.805 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:09.805 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:09.805 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:09.813 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:09.813 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:09.814 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:09.876 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:09.876 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:09.876 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:09.877 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:09.878 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:09.885 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:09.890 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@28279a49
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@384fda47
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3663d0ba
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@575cabf0
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@433d9680
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@566e142
[DEBUG] 2021-04-04 17:45:09.891 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2da81754
[DEBUG] 2021-04-04 17:45:09.895 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1f992a3a
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:09.897 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:09.897 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:09.897 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:09.897 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:09.964 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:10.054 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:10.054 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:10.054 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:10.054 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:10.054 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:10.055 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:10.074 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:10.075 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@78b7f805] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@58f2466c]
[DEBUG] 2021-04-04 17:45:10.075 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:10.075 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:10.075 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:10.075 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:10.092 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.092 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:10.092 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:10.092 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:10.092 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:10.092 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:10.092 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:10.092 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.092 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.092 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.092 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.092 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:10.093 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:10.093 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:10.093 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:10.093 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:10.093 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.093 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:10.093 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:10.093 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:10.093 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:10.093 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.093 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:10.093 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:10.093 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:10.093 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:10.093 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.093 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:10.093 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:10.094 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:10.094 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:10.094 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.094 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:10.094 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:10.094 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.094 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:10.094 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:10.094 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:10.094 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:10.094 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:10.095 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.095 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:10.095 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:10.095 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:10.095 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:10.095 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:10.095 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.095 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:10.095 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:10.095 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:10.095 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:10.095 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:10.095 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.095 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.096 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.121 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.121 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:10.121 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:10.122 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:10.122 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:10.122 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:10.122 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.122 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:10.122 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:10.122 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.123 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:10.123 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:10.123 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:10.123 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:10.123 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:10.134 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.135 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:10.135 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:10.135 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:10.135 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:10.135 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:10.135 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.135 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:10.135 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:10.135 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:10.135 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:10.135 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.135 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:10.135 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:10.142 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:10.142 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:10.142 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.142 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:10.142 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:10.142 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:10.142 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:10.142 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.143 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:10.143 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:10.143 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:10.143 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:10.144 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.144 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:10.144 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:10.144 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:10.144 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:10.144 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:10.144 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.144 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:10.145 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:10.145 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:10.145 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:10.145 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:10.145 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.145 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:10.145 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:10.146 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.146 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:10.146 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:10.146 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:10.146 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:10.146 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:10.146 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:10.191 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:10.191 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:10.191 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:10.194 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:10.194 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:10.195 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:10.251 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:10.252 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:10.252 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:10.252 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:10.252 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:10.252 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:10.252 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:10.252 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:10.252 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:10.253 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:10.259 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:10.259 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:10.259 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:10.259 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:10.259 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:10.260 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:10.260 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:10.260 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:10.260 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:10.260 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:10.260 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:10.260 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:10.260 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:10.260 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:10.260 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:10.261 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:10.262 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@35adf623
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@456f7d9e
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@75d366c2
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@8f40022
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5232e3f1
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@6c8fe7a4
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2047981
[DEBUG] 2021-04-04 17:45:10.263 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ad99cf3
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:10.269 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:10.271 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:10.271 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:10.271 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:10.319 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:10.393 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:10.393 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:10.393 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:10.393 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:10.394 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:10.394 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:10.400 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:10.401 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@52ca2652] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@65c5bf0e]
[DEBUG] 2021-04-04 17:45:10.401 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:10.401 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:10.401 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:10.420 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:10.430 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.430 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:10.431 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:10.431 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:10.431 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:10.431 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:10.431 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:10.431 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.431 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.434 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.434 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.434 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:10.434 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:10.434 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:10.434 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:10.434 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:10.435 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.435 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:10.435 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:10.435 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:10.435 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:10.435 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.435 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:10.435 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:10.435 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:10.435 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:10.435 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.441 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:10.441 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:10.441 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:10.441 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:10.441 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.441 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:10.441 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:10.441 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.441 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:10.441 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:10.441 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:10.441 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:10.441 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:10.442 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.442 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:10.442 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:10.442 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:10.442 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:10.442 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:10.442 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.442 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:10.442 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:10.443 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:10.443 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:10.443 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:10.443 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.443 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.443 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.443 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.443 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:10.443 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:10.443 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:10.443 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:10.443 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:10.443 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.458 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:10.458 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:10.458 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.458 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:10.459 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:10.459 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:10.459 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:10.459 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:10.459 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.459 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:10.459 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:10.459 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:10.459 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:10.459 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:10.460 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.460 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:10.460 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:10.471 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:10.471 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:10.471 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.471 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:10.471 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:10.471 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:10.471 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:10.471 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.471 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:10.471 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:10.471 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:10.471 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:10.472 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.472 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:10.472 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:10.472 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:10.472 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:10.472 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.472 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:10.472 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:10.472 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:10.472 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:10.478 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:10.478 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.478 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:10.479 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:10.480 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:10.524 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:10.524 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:10.524 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:10.532 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:10.532 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:10.534 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:10.591 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:10.591 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:10.592 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:10.595 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:10.595 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:10.595 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:10.595 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:10.595 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:10.596 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:10.597 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:10.598 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:10.598 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:10.598 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:10.598 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:10.598 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:10.598 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:10.598 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:10.598 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:10.598 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:10.598 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:10.600 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:10.601 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:10.601 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:10.601 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:10.601 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:10.601 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:10.601 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:10.601 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:10.601 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:10.601 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:10.601 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@733fb462
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@623e0631
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@359066bc
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@385dfb63
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@364fd4ae
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@245253d8
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@12417468
[DEBUG] 2021-04-04 17:45:10.602 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@459003a0
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:10.608 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:10.608 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:10.609 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:10.609 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:10.644 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:10.716 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:10.716 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:10.716 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:10.716 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:10.717 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:10.717 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:10.720 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:10.728 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@499ee966] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@76f2dad9]
[DEBUG] 2021-04-04 17:45:10.728 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:10.728 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:10.728 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:10.729 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:10.729 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.729 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:10.729 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:10.729 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:10.729 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:10.729 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:10.730 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:10.730 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.730 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.730 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.730 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.730 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:10.730 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:10.730 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:10.730 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:10.730 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:10.730 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.730 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:10.730 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:10.730 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:10.730 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:10.731 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.731 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:10.731 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:10.731 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:10.731 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:10.759 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.759 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:10.759 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:10.759 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:10.759 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:10.759 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.759 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:10.759 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:10.759 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.759 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:10.759 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:10.759 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:10.764 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:10.764 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:10.765 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.765 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:10.765 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:10.765 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:10.765 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:10.765 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:10.765 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.765 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:10.765 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:10.765 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:10.765 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:10.765 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:10.766 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.766 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.766 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.766 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.766 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:10.766 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:10.766 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:10.766 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:10.766 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:10.766 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.766 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:10.766 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:10.766 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.766 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:10.766 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:10.767 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:10.767 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:10.767 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:10.767 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.767 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:10.767 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:10.767 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:10.767 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:10.767 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:10.767 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.767 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:10.767 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:10.767 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:10.768 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:10.768 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.795 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:10.795 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:10.795 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:10.795 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:10.796 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.796 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:10.796 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:10.797 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:10.797 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:10.797 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.797 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:10.797 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:10.797 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:10.797 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:10.797 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.797 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:10.797 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:10.797 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:10.797 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:10.797 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:10.797 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:10.797 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:10.798 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:10.847 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:10.847 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:10.847 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:10.861 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:10.861 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:10.862 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:10.922 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:10.924 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:10.924 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:10.924 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:10.924 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:10.924 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:10.924 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:10.924 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:10.924 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:10.924 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:10.924 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:10.924 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:10.924 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:10.924 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:10.932 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:10.933 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:10.933 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:10.933 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:10.933 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:10.933 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:10.933 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:10.933 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:10.933 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:10.933 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:10.934 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:10.935 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@51c65a43
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@740dcae3
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4e140497
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@481b2f10
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2b6c7012
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@31acfd4e
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5f726750
[DEBUG] 2021-04-04 17:45:10.936 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4e80a001
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:10.937 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:10.940 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:10.940 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:10.940 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:10.940 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:10.940 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:10.972 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:11.031 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:11.031 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:11.031 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:11.031 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:11.032 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:11.032 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:11.035 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:11.035 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@a54acec] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@19da993b]
[DEBUG] 2021-04-04 17:45:11.035 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:11.035 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:11.044 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:11.045 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:11.045 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.045 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:11.045 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:11.045 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:11.045 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:11.045 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:11.046 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:11.046 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.060 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.060 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.060 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.060 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:11.060 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:11.060 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:11.060 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:11.060 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:11.060 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.060 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:11.060 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:11.061 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:11.061 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:11.061 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.061 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:11.061 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:11.061 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:11.061 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:11.061 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.061 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:11.071 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:11.071 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:11.071 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:11.072 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.072 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:11.072 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:11.072 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.072 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:11.072 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:11.072 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:11.072 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:11.072 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:11.073 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.073 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:11.073 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:11.073 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:11.073 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:11.073 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:11.073 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.073 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:11.073 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:11.073 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:11.073 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:11.087 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:11.087 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.087 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.087 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.087 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.087 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:11.087 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:11.087 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:11.087 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:11.087 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:11.087 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.092 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:11.092 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:11.092 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.094 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:11.095 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:11.095 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:11.095 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:11.095 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:11.099 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.100 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:11.100 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:11.107 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:11.107 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:11.107 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:11.107 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.113 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:11.113 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:11.113 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:11.113 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:11.113 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.113 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:11.113 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:11.113 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:11.113 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:11.113 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.113 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:11.113 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:11.113 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:11.113 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:11.114 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.114 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:11.114 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:11.114 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:11.114 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:11.114 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.114 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:11.114 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:11.114 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:11.114 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:11.124 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:11.124 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.124 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:11.131 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:11.131 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:11.131 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:11.131 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:11.131 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.131 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:11.131 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:11.131 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.132 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:11.132 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:11.132 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:11.132 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:11.132 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:11.132 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:11.218 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:11.218 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:11.218 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:11.245 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:11.245 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:11.251 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:11.300 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:11.300 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:11.300 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:11.300 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:11.300 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:11.300 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:11.300 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:11.300 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:11.300 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:11.301 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:11.302 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:11.303 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:11.306 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3b9ac754
[DEBUG] 2021-04-04 17:45:11.306 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5e002356
[DEBUG] 2021-04-04 17:45:11.306 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f820f42
[DEBUG] 2021-04-04 17:45:11.306 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b325930
[DEBUG] 2021-04-04 17:45:11.306 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@267f9765
[DEBUG] 2021-04-04 17:45:11.306 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@79ba0a6f
[DEBUG] 2021-04-04 17:45:11.306 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@261de205
[DEBUG] 2021-04-04 17:45:11.306 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@7f3fc42f
[DEBUG] 2021-04-04 17:45:11.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:11.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:11.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:11.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:11.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:11.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:11.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:11.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:11.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:11.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:11.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:11.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:11.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:11.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:11.309 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:11.309 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:11.309 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:11.351 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:11.404 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:11.404 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:11.404 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:11.405 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:11.405 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:11.405 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:11.407 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:11.409 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@38fb50f8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7ab802f4]
[DEBUG] 2021-04-04 17:45:11.409 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:11.409 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:11.409 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:11.409 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:11.421 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.421 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:11.421 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:11.421 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:11.421 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:11.421 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:11.421 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:11.421 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.435 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.435 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.444 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.444 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:11.444 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:11.444 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:11.444 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:11.444 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:11.444 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.444 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:11.444 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:11.444 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:11.444 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:11.444 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.445 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:11.445 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:11.445 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:11.445 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:11.445 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.445 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:11.445 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:11.445 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:11.445 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:11.445 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.445 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:11.445 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:11.445 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.445 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:11.445 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:11.445 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:11.445 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:11.446 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:11.446 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.446 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:11.446 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:11.446 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:11.446 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:11.446 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:11.446 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.446 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:11.446 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:11.446 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:11.447 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:11.447 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:11.447 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.447 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.447 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.447 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.447 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:11.447 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:11.447 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:11.468 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:11.468 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:11.474 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.474 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:11.474 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:11.474 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.474 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:11.474 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:11.474 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:11.474 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:11.474 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:11.475 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.475 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:11.475 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:11.475 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:11.475 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:11.475 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:11.475 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.475 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:11.475 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:11.475 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:11.475 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:11.475 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.475 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:11.475 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:11.475 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:11.475 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:11.476 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.476 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:11.476 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:11.486 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:11.486 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:11.486 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.486 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:11.486 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:11.486 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:11.486 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:11.486 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.486 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:11.487 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:11.487 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:11.487 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:11.487 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:11.487 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.488 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:11.489 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:11.489 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:11.489 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:11.490 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:11.490 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.490 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:11.490 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:11.490 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.490 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:11.490 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:11.490 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:11.490 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:11.490 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:11.490 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:11.525 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:11.525 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:11.525 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:11.532 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:11.532 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:11.536 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:11.593 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:11.593 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:11.593 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:11.593 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:11.594 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:11.595 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:11.595 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:11.595 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:11.595 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:11.595 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:11.595 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:11.595 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:11.595 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:11.595 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:11.595 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:11.595 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:11.600 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:11.601 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6b63abdc
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7b351446
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5f08fe00
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@a1691c0
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7c5df615
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2f995afc
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@377949f1
[DEBUG] 2021-04-04 17:45:11.602 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@9df564f
[DEBUG] 2021-04-04 17:45:11.604 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:11.605 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:11.605 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:11.605 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:11.605 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:11.643 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:11.697 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:11.697 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:11.697 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:11.698 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:11.698 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:11.698 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:11.701 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:11.701 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1f536481] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5234b61a]
[DEBUG] 2021-04-04 17:45:11.701 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:11.702 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:11.702 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:11.702 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:11.714 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.714 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:11.714 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:11.714 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:11.715 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:11.715 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:11.715 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:11.715 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.724 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.724 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.724 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.724 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:11.724 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:11.724 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:11.724 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:11.724 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:11.724 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.724 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:11.725 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:11.725 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:11.725 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:11.725 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.725 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:11.725 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:11.725 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:11.735 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:11.737 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.737 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:11.737 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:11.737 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:11.737 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:11.737 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.737 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:11.737 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:11.737 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.737 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:11.737 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:11.737 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:11.737 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:11.738 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:11.738 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.738 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:11.738 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:11.738 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:11.738 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:11.738 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:11.745 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.745 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:11.745 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:11.745 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:11.746 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:11.746 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:11.747 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.747 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.747 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.747 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.747 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:11.747 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:11.747 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:11.747 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:11.747 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:11.747 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.747 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:11.747 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:11.747 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.747 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:11.748 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:11.748 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:11.759 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:11.760 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:11.768 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.768 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:11.768 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:11.768 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:11.768 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:11.768 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:11.768 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.768 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:11.768 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:11.768 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:11.774 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:11.774 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.774 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:11.774 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:11.774 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:11.774 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:11.774 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.774 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:11.774 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:11.774 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:11.774 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:11.775 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.775 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:11.775 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:11.775 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:11.775 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:11.775 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.775 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:11.775 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:11.775 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:11.775 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:11.775 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:11.775 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:11.777 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:11.778 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:11.811 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:11.811 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:11.811 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:11.821 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:11.821 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:11.823 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:11.871 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:11.871 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:11.872 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:11.872 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:11.872 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:11.872 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:11.872 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:11.872 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:11.872 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:11.872 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:11.872 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:11.872 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:11.872 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:11.875 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:11.875 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:11.875 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:11.875 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:11.875 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:11.875 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:11.875 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:11.875 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:11.876 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:11.877 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:11.880 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@457a5b2d
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@79d7035
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@372461a9
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5fffb692
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@48cb2d73
[DEBUG] 2021-04-04 17:45:11.881 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@243bf087
[DEBUG] 2021-04-04 17:45:11.883 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3086f480
[DEBUG] 2021-04-04 17:45:11.883 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@126f8f24
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:11.888 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:11.890 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:11.890 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:11.890 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:11.923 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:11.979 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:11.980 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:11.980 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:11.980 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:11.980 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:11.980 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:11.986 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:11.986 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7742a45c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7ca492d9]
[DEBUG] 2021-04-04 17:45:11.987 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:11.987 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:11.987 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:11.987 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:12.003 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.006 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:12.006 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:12.006 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:12.006 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:12.006 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:12.006 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:12.006 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.009 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.009 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.009 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.012 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:12.012 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:12.012 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:12.012 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:12.012 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:12.012 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.012 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:12.012 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:12.013 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:12.013 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:12.013 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.013 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:12.013 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:12.013 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:12.013 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:12.013 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.013 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:12.013 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:12.013 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:12.013 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:12.013 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.013 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:12.013 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:12.022 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.022 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:12.022 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:12.022 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:12.022 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:12.022 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:12.025 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.025 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:12.025 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:12.025 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:12.025 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:12.025 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:12.025 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.025 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:12.025 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:12.025 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:12.025 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:12.026 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:12.028 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.029 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.029 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.029 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.034 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:12.034 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:12.034 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:12.034 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:12.034 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:12.035 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.035 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:12.035 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:12.035 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.035 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:12.038 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:12.038 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:12.038 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:12.038 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:12.046 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.046 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:12.046 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:12.046 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:12.046 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:12.047 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:12.048 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.048 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:12.048 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:12.048 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:12.048 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:12.048 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.048 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:12.048 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:12.048 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:12.052 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:12.052 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.053 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:12.053 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:12.053 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:12.053 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:12.053 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.053 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:12.053 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:12.053 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:12.053 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:12.053 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.053 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:12.053 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:12.053 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:12.056 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:12.056 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:12.056 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.056 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:12.057 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:12.093 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:12.093 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:12.093 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:12.101 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:12.101 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:12.104 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:12.158 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:12.158 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:12.158 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:12.158 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:12.158 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:12.158 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:12.158 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:12.159 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:12.159 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:12.159 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:12.159 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:12.159 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:12.159 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:12.159 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:12.163 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:12.164 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:12.165 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:12.165 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:12.165 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:12.165 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:12.165 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:12.165 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:12.165 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:12.165 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:12.165 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:12.165 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:12.167 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@191c6e13
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7436364d
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@1a8e9ed9
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@68ea253b
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@12fcb2c3
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@57bd6a8f
[DEBUG] 2021-04-04 17:45:12.168 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@39ab5ef7
[DEBUG] 2021-04-04 17:45:12.171 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@517704
[DEBUG] 2021-04-04 17:45:12.172 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:12.172 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:12.172 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:12.172 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:12.172 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:12.172 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:12.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:12.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:12.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:12.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:12.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:12.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:12.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:12.173 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:12.173 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:12.173 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:12.173 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:12.215 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:12.268 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:12.268 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:12.268 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:12.269 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:12.269 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:12.269 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:12.285 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:12.289 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7abeabe9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5a05dd30]
[DEBUG] 2021-04-04 17:45:12.289 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:12.289 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:12.290 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:12.290 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:12.300 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.300 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:12.300 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:12.300 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:12.300 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:12.300 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:12.300 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:12.301 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.301 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.301 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.301 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.301 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:12.301 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:12.301 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:12.301 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:12.301 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:12.301 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.301 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:12.301 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:12.301 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:12.301 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:12.301 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.301 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:12.302 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:12.302 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:12.302 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:12.302 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.302 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:12.302 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:12.302 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:12.302 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:12.302 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.302 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:12.302 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:12.302 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.302 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:12.302 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:12.302 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:12.302 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:12.302 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:12.303 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.303 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:12.328 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:12.328 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:12.328 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:12.328 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:12.328 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.328 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:12.328 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:12.328 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:12.328 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:12.328 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:12.328 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.329 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.329 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.329 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.329 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:12.329 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:12.329 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:12.329 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:12.329 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:12.329 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.329 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:12.329 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:12.329 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.329 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:12.337 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:12.337 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:12.337 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:12.337 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:12.337 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.339 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:12.340 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:12.340 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:12.340 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:12.340 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:12.340 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.340 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:12.340 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:12.340 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:12.340 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:12.340 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.340 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:12.340 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:12.340 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:12.340 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:12.340 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.344 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:12.344 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:12.344 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:12.344 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:12.344 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.344 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:12.344 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:12.344 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:12.344 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:12.344 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.344 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:12.344 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:12.344 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:12.346 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:12.346 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:12.346 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.346 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:12.346 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:12.346 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:12.346 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:12.346 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:12.347 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.347 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:12.347 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:12.347 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.347 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:12.347 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:12.347 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:12.347 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:12.347 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:12.347 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:12.408 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2021-04-04 17:45:12.408 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2021-04-04 17:45:12.409 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2021-04-04 17:45:12.425 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2021-04-04 17:45:12.425 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2021-04-04 17:45:12.436 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2021-04-04 17:45:12.473 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2021-04-04 17:45:12.473 [main] RegionFactoryInitiator - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2021-04-04 17:45:12.473 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@39ad12b6
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@6aba5d30
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@459cfcca
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@e322ec9
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@52cb4f50
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@572e6fd9
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3c46dcbe
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@41ffaeb8
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@444cc791
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6a48a7f3
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6c806c8b
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@46d63dbb
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@23592946
[DEBUG] 2021-04-04 17:45:12.474 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@702c436b
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31d6f3fe
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@31ff6309
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4dc8c0ea
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@4aedaf61
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@782bf610
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10895b16
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3b9632d1
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1846579f
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7be7e15
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2330e3e0
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3f9270ed
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@4d654825
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3964d79
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7be3a9ce
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e1459ea
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@642505c7
[DEBUG] 2021-04-04 17:45:12.475 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@21ac5eb4
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@2a685eba
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@77d680e6
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@37b57b54
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5580d62f
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2c58dcb1
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2dd8239
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@cf67838
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@499ef98e
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@639aba11
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6e33fcae
[DEBUG] 2021-04-04 17:45:12.484 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@27e5b378
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1a87b51
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@6ecab872
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2a066689
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7479b626
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3efedc6f
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@65f2f9b0
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@64968732
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4d1f1ff5
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@61a1ea2c
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@23eff5d1
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@168cd36b
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@797fcf9
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@16bd7ae1
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@15d114ce
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3312f4f4
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@b5aa65b
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@76cdafa3
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@6b27b2d0
[DEBUG] 2021-04-04 17:45:12.485 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fb64e14
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2021-04-04 17:45:12.487 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[INFO ] 2021-04-04 17:45:12.488 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.cj.jdbc.Driver at URL: jdbc:mysql://localhost:3306/test_compendium?serverTimezone=UTC
[INFO ] 2021-04-04 17:45:12.488 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {password=****, user=root}
[INFO ] 2021-04-04 17:45:12.488 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2021-04-04 17:45:12.518 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2021-04-04 17:45:12.573 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 8.0.22
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:12.573 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.16 (Revision: 34cbc6bc61f72836e26327537a432d6db7c77de6)
      major : 8
      minor : 0
[DEBUG] 2021-04-04 17:45:12.573 [main] JdbcEnvironmentInitiator - JDBC version : 4.2
[INFO ] 2021-04-04 17:45:12.574 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
[DEBUG] 2021-04-04 17:45:12.574 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2021-04-04 17:45:12.574 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2021-04-04 17:45:12.577 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2021-04-04 17:45:12.577 [main] TypeConfiguration$Scope - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@67328bcb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51ba952e]
[DEBUG] 2021-04-04 17:45:12.578 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.UserTest
[DEBUG] 2021-04-04 17:45:12.578 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:12.578 [main] EntityBinder - Import with entity name User
[DEBUG] 2021-04-04 17:45:12.578 [main] EntityBinder - Bind entity ogedengbe.tosan.model.UserTest on table user
[DEBUG] 2021-04-04 17:45:12.578 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.579 [main] PropertyBinder - MetadataSourceProcessor property userId with lazy=false
[DEBUG] 2021-04-04 17:45:12.579 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userId]
[DEBUG] 2021-04-04 17:45:12.579 [main] SimpleValueBinder - building SimpleValue for userId
[DEBUG] 2021-04-04 17:45:12.579 [main] PropertyBinder - Building property userId
[DEBUG] 2021-04-04 17:45:12.579 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:12.579 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:12.596 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.596 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.596 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.596 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=conceptSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.597 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='conceptSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:12.597 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:12.597 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='userOne'}
[DEBUG] 2021-04-04 17:45:12.597 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.UserTest.conceptSet
[DEBUG] 2021-04-04 17:45:12.597 [main] PropertyBinder - Building property conceptSet
[DEBUG] 2021-04-04 17:45:12.597 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=first_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.597 [main] PropertyBinder - MetadataSourceProcessor property firstName with lazy=false
[DEBUG] 2021-04-04 17:45:12.597 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:firstName]
[DEBUG] 2021-04-04 17:45:12.597 [main] SimpleValueBinder - building SimpleValue for firstName
[DEBUG] 2021-04-04 17:45:12.597 [main] PropertyBinder - Building property firstName
[DEBUG] 2021-04-04 17:45:12.597 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=last_name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.597 [main] PropertyBinder - MetadataSourceProcessor property lastName with lazy=false
[DEBUG] 2021-04-04 17:45:12.597 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:lastName]
[DEBUG] 2021-04-04 17:45:12.597 [main] SimpleValueBinder - building SimpleValue for lastName
[DEBUG] 2021-04-04 17:45:12.597 [main] PropertyBinder - Building property lastName
[DEBUG] 2021-04-04 17:45:12.598 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=password, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.598 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2021-04-04 17:45:12.598 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:password]
[DEBUG] 2021-04-04 17:45:12.598 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2021-04-04 17:45:12.598 [main] PropertyBinder - Building property password
[DEBUG] 2021-04-04 17:45:12.608 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.608 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:12.608 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.UserTest:userName]
[DEBUG] 2021-04-04 17:45:12.608 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.608 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:12.608 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.RoleTest
[DEBUG] 2021-04-04 17:45:12.608 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:12.608 [main] EntityBinder - Import with entity name Role
[DEBUG] 2021-04-04 17:45:12.608 [main] EntityBinder - Bind entity ogedengbe.tosan.model.RoleTest on table role
[DEBUG] 2021-04-04 17:45:12.612 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=role_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.612 [main] PropertyBinder - MetadataSourceProcessor property roleId with lazy=false
[DEBUG] 2021-04-04 17:45:12.612 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleId]
[DEBUG] 2021-04-04 17:45:12.612 [main] SimpleValueBinder - building SimpleValue for roleId
[DEBUG] 2021-04-04 17:45:12.612 [main] PropertyBinder - Building property roleId
[DEBUG] 2021-04-04 17:45:12.612 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(role_id)]), roleId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:12.612 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=rolename, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.612 [main] PropertyBinder - MetadataSourceProcessor property roleName with lazy=false
[DEBUG] 2021-04-04 17:45:12.612 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:roleName]
[DEBUG] 2021-04-04 17:45:12.612 [main] SimpleValueBinder - building SimpleValue for roleName
[DEBUG] 2021-04-04 17:45:12.612 [main] PropertyBinder - Building property roleName
[DEBUG] 2021-04-04 17:45:12.613 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:12.622 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.622 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.622 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.623 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=roleSet_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.623 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='roleSet_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:12.623 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:12.623 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
[DEBUG] 2021-04-04 17:45:12.623 [main] CollectionBinder - Collection role: ogedengbe.tosan.model.RoleTest.roleSet
[DEBUG] 2021-04-04 17:45:12.623 [main] PropertyBinder - Building property roleSet
[DEBUG] 2021-04-04 17:45:12.629 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(role), mappingColumn=username, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.629 [main] PropertyBinder - MetadataSourceProcessor property userName with lazy=false
[DEBUG] 2021-04-04 17:45:12.629 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.RoleTest:userName]
[DEBUG] 2021-04-04 17:45:12.629 [main] SimpleValueBinder - building SimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.629 [main] PropertyBinder - Building property userName
[DEBUG] 2021-04-04 17:45:12.629 [main] AnnotationBinder - Binding entity from annotated class: ogedengbe.tosan.model.ConceptTest
[DEBUG] 2021-04-04 17:45:12.629 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2021-04-04 17:45:12.630 [main] EntityBinder - Import with entity name Concept
[DEBUG] 2021-04-04 17:45:12.630 [main] EntityBinder - Bind entity ogedengbe.tosan.model.ConceptTest on table concept
[DEBUG] 2021-04-04 17:45:12.633 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=concept_id, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.633 [main] PropertyBinder - MetadataSourceProcessor property conceptId with lazy=false
[DEBUG] 2021-04-04 17:45:12.633 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptId]
[DEBUG] 2021-04-04 17:45:12.633 [main] SimpleValueBinder - building SimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:12.633 [main] PropertyBinder - Building property conceptId
[DEBUG] 2021-04-04 17:45:12.633 [main] BinderHelper - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(concept_id)]), conceptId, org.hibernate.id.enhanced.SequenceStyleGenerator, native, ...)
[DEBUG] 2021-04-04 17:45:12.633 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=category, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.633 [main] PropertyBinder - MetadataSourceProcessor property category with lazy=false
[DEBUG] 2021-04-04 17:45:12.633 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:category]
[DEBUG] 2021-04-04 17:45:12.633 [main] SimpleValueBinder - building SimpleValue for category
[DEBUG] 2021-04-04 17:45:12.633 [main] PropertyBinder - Building property category
[DEBUG] 2021-04-04 17:45:12.633 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.633 [main] PropertyBinder - MetadataSourceProcessor property conceptName with lazy=false
[DEBUG] 2021-04-04 17:45:12.633 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:conceptName]
[DEBUG] 2021-04-04 17:45:12.633 [main] SimpleValueBinder - building SimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:12.633 [main] PropertyBinder - Building property conceptName
[DEBUG] 2021-04-04 17:45:12.634 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.634 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2021-04-04 17:45:12.634 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:description]
[DEBUG] 2021-04-04 17:45:12.634 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2021-04-04 17:45:12.634 [main] PropertyBinder - Building property description
[DEBUG] 2021-04-04 17:45:12.634 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_one, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.634 [main] PropertyBinder - MetadataSourceProcessor property keywordOne with lazy=false
[DEBUG] 2021-04-04 17:45:12.634 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordOne]
[DEBUG] 2021-04-04 17:45:12.634 [main] SimpleValueBinder - building SimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:12.634 [main] PropertyBinder - Building property keywordOne
[DEBUG] 2021-04-04 17:45:12.634 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=keyword_two, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.634 [main] PropertyBinder - MetadataSourceProcessor property keywordTwo with lazy=false
[DEBUG] 2021-04-04 17:45:12.634 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [ogedengbe.tosan.model.ConceptTest:keywordTwo]
[DEBUG] 2021-04-04 17:45:12.634 [main] SimpleValueBinder - building SimpleValue for keywordTwo
[DEBUG] 2021-04-04 17:45:12.634 [main] PropertyBinder - Building property keywordTwo
[DEBUG] 2021-04-04 17:45:12.634 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2021-04-04 17:45:12.634 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(concept), mappingColumn=userOne, insertable=true, updatable=true, unique=false}
[DEBUG] 2021-04-04 17:45:12.635 [main] PropertyBinder - Building property userOne
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for userId
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for firstName
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for lastName
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for roleId
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for roleName
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for userName
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for conceptId
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for category
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for conceptName
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for keywordOne
[DEBUG] 2021-04-04 17:45:12.635 [main] SimpleValueBinder - Starting fillSimpleValue for keywordTwo
